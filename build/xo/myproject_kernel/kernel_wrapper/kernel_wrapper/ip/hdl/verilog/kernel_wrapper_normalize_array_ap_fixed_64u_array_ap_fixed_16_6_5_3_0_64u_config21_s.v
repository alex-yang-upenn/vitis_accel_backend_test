// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module kernel_wrapper_normalize_array_ap_fixed_64u_array_ap_fixed_16_6_5_3_0_64u_config21_s (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        layer19_out_dout,
        layer19_out_num_data_valid,
        layer19_out_fifo_cap,
        layer19_out_empty_n,
        layer19_out_read,
        layer21_out_din,
        layer21_out_num_data_valid,
        layer21_out_fifo_cap,
        layer21_out_full_n,
        layer21_out_write
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_state2 = 3'd2;
parameter    ap_ST_fsm_state3 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [1023:0] layer19_out_dout;
input  [1:0] layer19_out_num_data_valid;
input  [1:0] layer19_out_fifo_cap;
input   layer19_out_empty_n;
output   layer19_out_read;
output  [1023:0] layer21_out_din;
input  [1:0] layer21_out_num_data_valid;
input  [1:0] layer21_out_fifo_cap;
input   layer21_out_full_n;
output   layer21_out_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg layer19_out_read;
reg layer21_out_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    layer19_out_blk_n;
reg    layer21_out_blk_n;
wire    ap_CS_fsm_state3;
wire   [25:0] mul_ln1347_fu_618_p2;
reg   [25:0] mul_ln1347_reg_16747;
wire    ap_CS_fsm_state2;
wire   [25:0] mul_ln1347_1_fu_596_p2;
reg   [25:0] mul_ln1347_1_reg_16751;
wire   [25:0] mul_ln1347_2_fu_614_p2;
reg   [25:0] mul_ln1347_2_reg_16755;
wire   [25:0] mul_ln1347_3_fu_616_p2;
reg   [25:0] mul_ln1347_3_reg_16759;
wire   [25:0] mul_ln1347_4_fu_566_p2;
reg   [25:0] mul_ln1347_4_reg_16763;
wire   [25:0] mul_ln1347_5_fu_563_p2;
reg   [25:0] mul_ln1347_5_reg_16767;
wire   [25:0] mul_ln1347_6_fu_626_p2;
reg   [25:0] mul_ln1347_6_reg_16771;
wire   [25:0] mul_ln1347_7_fu_583_p2;
reg   [25:0] mul_ln1347_7_reg_16775;
wire   [25:0] mul_ln1347_8_fu_568_p2;
reg   [25:0] mul_ln1347_8_reg_16779;
wire   [25:0] mul_ln1347_9_fu_605_p2;
reg   [25:0] mul_ln1347_9_reg_16783;
wire   [25:0] mul_ln1347_10_fu_574_p2;
reg   [25:0] mul_ln1347_10_reg_16787;
wire   [25:0] mul_ln1347_11_fu_615_p2;
reg   [25:0] mul_ln1347_11_reg_16791;
wire   [25:0] mul_ln1347_12_fu_587_p2;
reg   [25:0] mul_ln1347_12_reg_16795;
wire   [25:0] mul_ln1347_13_fu_593_p2;
reg   [25:0] mul_ln1347_13_reg_16799;
wire   [25:0] mul_ln1347_14_fu_606_p2;
reg   [25:0] mul_ln1347_14_reg_16803;
wire   [25:0] mul_ln1347_15_fu_625_p2;
reg   [25:0] mul_ln1347_15_reg_16807;
wire   [25:0] mul_ln1347_16_fu_619_p2;
reg   [25:0] mul_ln1347_16_reg_16811;
wire   [25:0] mul_ln1347_17_fu_581_p2;
reg   [25:0] mul_ln1347_17_reg_16815;
wire   [25:0] mul_ln1347_18_fu_580_p2;
reg   [25:0] mul_ln1347_18_reg_16819;
wire   [25:0] mul_ln1347_19_fu_604_p2;
reg   [25:0] mul_ln1347_19_reg_16823;
wire   [25:0] mul_ln1347_20_fu_588_p2;
reg   [25:0] mul_ln1347_20_reg_16827;
wire   [25:0] mul_ln1347_21_fu_613_p2;
reg   [25:0] mul_ln1347_21_reg_16831;
wire   [25:0] mul_ln1347_22_fu_579_p2;
reg   [25:0] mul_ln1347_22_reg_16835;
wire   [25:0] mul_ln1347_23_fu_571_p2;
reg   [25:0] mul_ln1347_23_reg_16839;
wire   [25:0] mul_ln1347_24_fu_590_p2;
reg   [25:0] mul_ln1347_24_reg_16843;
wire   [25:0] mul_ln1347_25_fu_608_p2;
reg   [25:0] mul_ln1347_25_reg_16847;
wire   [25:0] mul_ln1347_26_fu_621_p2;
reg   [25:0] mul_ln1347_26_reg_16851;
wire   [25:0] mul_ln1347_27_fu_607_p2;
reg   [25:0] mul_ln1347_27_reg_16855;
wire   [25:0] mul_ln1347_28_fu_617_p2;
reg   [25:0] mul_ln1347_28_reg_16859;
wire   [25:0] mul_ln1347_29_fu_570_p2;
reg   [25:0] mul_ln1347_29_reg_16863;
wire   [25:0] mul_ln1347_30_fu_578_p2;
reg   [25:0] mul_ln1347_30_reg_16867;
wire   [25:0] mul_ln1347_31_fu_597_p2;
reg   [25:0] mul_ln1347_31_reg_16871;
wire   [25:0] mul_ln1347_32_fu_582_p2;
reg   [25:0] mul_ln1347_32_reg_16875;
wire   [25:0] mul_ln1347_33_fu_623_p2;
reg   [25:0] mul_ln1347_33_reg_16879;
wire   [25:0] mul_ln1347_34_fu_569_p2;
reg   [25:0] mul_ln1347_34_reg_16883;
wire   [25:0] mul_ln1347_35_fu_594_p2;
reg   [25:0] mul_ln1347_35_reg_16887;
wire   [25:0] mul_ln1347_36_fu_565_p2;
reg   [25:0] mul_ln1347_36_reg_16891;
wire   [25:0] mul_ln1347_37_fu_602_p2;
reg   [25:0] mul_ln1347_37_reg_16895;
wire   [25:0] mul_ln1347_38_fu_624_p2;
reg   [25:0] mul_ln1347_38_reg_16899;
wire   [25:0] mul_ln1347_39_fu_589_p2;
reg   [25:0] mul_ln1347_39_reg_16903;
wire   [25:0] mul_ln1347_40_fu_585_p2;
reg   [25:0] mul_ln1347_40_reg_16907;
wire   [25:0] mul_ln1347_41_fu_609_p2;
reg   [25:0] mul_ln1347_41_reg_16911;
wire   [25:0] mul_ln1347_42_fu_622_p2;
reg   [25:0] mul_ln1347_42_reg_16915;
wire   [25:0] mul_ln1347_43_fu_611_p2;
reg   [25:0] mul_ln1347_43_reg_16919;
wire   [25:0] mul_ln1347_44_fu_576_p2;
reg   [25:0] mul_ln1347_44_reg_16923;
wire   [25:0] mul_ln1347_45_fu_620_p2;
reg   [25:0] mul_ln1347_45_reg_16927;
wire   [25:0] mul_ln1347_46_fu_584_p2;
reg   [25:0] mul_ln1347_46_reg_16931;
wire   [25:0] mul_ln1347_47_fu_567_p2;
reg   [25:0] mul_ln1347_47_reg_16935;
wire   [25:0] mul_ln1347_48_fu_595_p2;
reg   [25:0] mul_ln1347_48_reg_16939;
wire   [25:0] mul_ln1347_49_fu_601_p2;
reg   [25:0] mul_ln1347_49_reg_16943;
wire   [25:0] mul_ln1347_50_fu_612_p2;
reg   [25:0] mul_ln1347_50_reg_16947;
wire   [25:0] mul_ln1347_51_fu_600_p2;
reg   [25:0] mul_ln1347_51_reg_16951;
wire   [25:0] mul_ln1347_52_fu_592_p2;
reg   [25:0] mul_ln1347_52_reg_16955;
wire   [25:0] mul_ln1347_53_fu_591_p2;
reg   [25:0] mul_ln1347_53_reg_16959;
wire   [25:0] mul_ln1347_54_fu_573_p2;
reg   [25:0] mul_ln1347_54_reg_16963;
wire   [25:0] mul_ln1347_55_fu_610_p2;
reg   [25:0] mul_ln1347_55_reg_16967;
wire   [25:0] mul_ln1347_56_fu_603_p2;
reg   [25:0] mul_ln1347_56_reg_16971;
wire   [25:0] mul_ln1347_57_fu_575_p2;
reg   [25:0] mul_ln1347_57_reg_16975;
wire   [25:0] mul_ln1347_58_fu_564_p2;
reg   [25:0] mul_ln1347_58_reg_16979;
wire   [25:0] mul_ln1347_59_fu_599_p2;
reg   [25:0] mul_ln1347_59_reg_16983;
wire   [25:0] mul_ln1347_60_fu_577_p2;
reg   [25:0] mul_ln1347_60_reg_16987;
wire   [25:0] mul_ln1347_61_fu_572_p2;
reg   [25:0] mul_ln1347_61_reg_16991;
wire   [15:0] a_V_fu_16996_p1;
reg  signed [15:0] a_V_reg_19105;
reg  signed [15:0] a_V_60_reg_19110;
reg  signed [15:0] a_V_61_reg_19115;
reg  signed [15:0] a_V_1_reg_19120;
reg  signed [15:0] a_V_2_reg_19125;
reg  signed [15:0] a_V_3_reg_19130;
reg  signed [15:0] a_V_4_reg_19135;
reg  signed [15:0] a_V_5_reg_19140;
reg  signed [15:0] a_V_6_reg_19145;
reg  signed [15:0] a_V_7_reg_19150;
reg  signed [15:0] a_V_8_reg_19155;
reg  signed [15:0] a_V_9_reg_19160;
reg  signed [15:0] a_V_10_reg_19165;
reg  signed [15:0] a_V_11_reg_19170;
reg  signed [15:0] a_V_12_reg_19175;
reg  signed [15:0] a_V_13_reg_19180;
reg  signed [15:0] a_V_14_reg_19185;
reg  signed [15:0] a_V_15_reg_19190;
reg  signed [15:0] a_V_16_reg_19195;
reg  signed [15:0] a_V_17_reg_19200;
reg  signed [15:0] a_V_18_reg_19205;
reg  signed [15:0] a_V_19_reg_19210;
reg  signed [15:0] a_V_20_reg_19215;
reg  signed [15:0] a_V_21_reg_19220;
reg  signed [15:0] a_V_22_reg_19225;
reg  signed [15:0] a_V_23_reg_19230;
reg  signed [15:0] a_V_24_reg_19235;
reg  signed [15:0] a_V_25_reg_19240;
reg  signed [15:0] a_V_26_reg_19245;
reg  signed [15:0] a_V_27_reg_19250;
reg  signed [15:0] a_V_28_reg_19255;
reg  signed [15:0] a_V_29_reg_19260;
reg  signed [15:0] a_V_30_reg_19265;
reg  signed [15:0] a_V_31_reg_19270;
reg  signed [15:0] a_V_32_reg_19275;
reg  signed [15:0] a_V_33_reg_19280;
reg  signed [15:0] a_V_34_reg_19285;
reg  signed [15:0] a_V_35_reg_19290;
reg  signed [15:0] a_V_36_reg_19295;
reg  signed [15:0] a_V_37_reg_19300;
reg  signed [15:0] a_V_38_reg_19305;
reg  signed [15:0] a_V_39_reg_19310;
reg  signed [15:0] a_V_40_reg_19315;
reg  signed [15:0] a_V_41_reg_19320;
reg  signed [15:0] a_V_42_reg_19325;
reg  signed [15:0] a_V_43_reg_19330;
reg  signed [15:0] a_V_44_reg_19335;
reg  signed [15:0] a_V_45_reg_19340;
reg  signed [15:0] a_V_46_reg_19345;
reg  signed [15:0] a_V_47_reg_19350;
reg  signed [15:0] a_V_48_reg_19355;
reg  signed [15:0] a_V_49_reg_19360;
reg  signed [15:0] a_V_50_reg_19365;
reg  signed [15:0] a_V_51_reg_19370;
reg  signed [15:0] a_V_52_reg_19375;
reg  signed [15:0] a_V_53_reg_19380;
reg  signed [15:0] a_V_54_reg_19385;
reg  signed [15:0] a_V_55_reg_19390;
reg  signed [15:0] a_V_56_reg_19395;
reg  signed [15:0] a_V_57_reg_19400;
reg  signed [15:0] a_V_58_reg_19405;
reg  signed [15:0] a_V_59_reg_19410;
reg   [15:0] trunc_ln818_5_reg_19415;
reg   [15:0] trunc_ln818_53_reg_19420;
reg    ap_block_state1;
wire   [12:0] mul_ln1347_5_fu_563_p1;
wire   [11:0] mul_ln1347_58_fu_564_p1;
wire   [11:0] mul_ln1347_36_fu_565_p1;
wire   [12:0] mul_ln1347_4_fu_566_p1;
wire   [12:0] mul_ln1347_47_fu_567_p1;
wire   [12:0] mul_ln1347_8_fu_568_p1;
wire   [12:0] mul_ln1347_34_fu_569_p1;
wire   [12:0] mul_ln1347_29_fu_570_p1;
wire   [12:0] mul_ln1347_23_fu_571_p1;
wire   [12:0] mul_ln1347_61_fu_572_p1;
wire   [11:0] mul_ln1347_54_fu_573_p1;
wire   [12:0] mul_ln1347_10_fu_574_p1;
wire   [12:0] mul_ln1347_57_fu_575_p1;
wire   [12:0] mul_ln1347_44_fu_576_p1;
wire   [12:0] mul_ln1347_60_fu_577_p1;
wire   [11:0] mul_ln1347_30_fu_578_p1;
wire   [12:0] mul_ln1347_22_fu_579_p1;
wire   [12:0] mul_ln1347_18_fu_580_p1;
wire   [11:0] mul_ln1347_17_fu_581_p1;
wire   [12:0] mul_ln1347_32_fu_582_p1;
wire   [12:0] mul_ln1347_7_fu_583_p1;
wire   [11:0] mul_ln1347_46_fu_584_p1;
wire   [11:0] mul_ln1347_40_fu_585_p1;
wire   [12:0] mul_ln1347_12_fu_587_p1;
wire   [12:0] mul_ln1347_20_fu_588_p1;
wire   [12:0] mul_ln1347_39_fu_589_p1;
wire   [12:0] mul_ln1347_24_fu_590_p1;
wire   [12:0] mul_ln1347_53_fu_591_p1;
wire   [12:0] mul_ln1347_52_fu_592_p1;
wire   [12:0] mul_ln1347_13_fu_593_p1;
wire   [11:0] mul_ln1347_35_fu_594_p1;
wire   [11:0] mul_ln1347_48_fu_595_p1;
wire   [12:0] mul_ln1347_1_fu_596_p1;
wire   [12:0] mul_ln1347_31_fu_597_p1;
wire   [12:0] mul_ln1347_59_fu_599_p1;
wire   [12:0] mul_ln1347_51_fu_600_p1;
wire   [12:0] mul_ln1347_49_fu_601_p1;
wire   [11:0] mul_ln1347_37_fu_602_p1;
wire   [11:0] mul_ln1347_56_fu_603_p1;
wire   [12:0] mul_ln1347_19_fu_604_p1;
wire   [11:0] mul_ln1347_9_fu_605_p1;
wire   [11:0] mul_ln1347_14_fu_606_p1;
wire   [11:0] mul_ln1347_27_fu_607_p1;
wire   [12:0] mul_ln1347_25_fu_608_p1;
wire   [12:0] mul_ln1347_41_fu_609_p1;
wire   [11:0] mul_ln1347_55_fu_610_p1;
wire   [12:0] mul_ln1347_43_fu_611_p1;
wire   [11:0] mul_ln1347_50_fu_612_p1;
wire   [12:0] mul_ln1347_21_fu_613_p1;
wire   [12:0] mul_ln1347_2_fu_614_p1;
wire   [12:0] mul_ln1347_11_fu_615_p1;
wire   [12:0] mul_ln1347_3_fu_616_p1;
wire   [11:0] mul_ln1347_28_fu_617_p1;
wire   [12:0] mul_ln1347_fu_618_p1;
wire   [12:0] mul_ln1347_16_fu_619_p1;
wire   [11:0] mul_ln1347_45_fu_620_p1;
wire   [11:0] mul_ln1347_26_fu_621_p1;
wire   [11:0] mul_ln1347_42_fu_622_p1;
wire   [11:0] mul_ln1347_33_fu_623_p1;
wire   [11:0] mul_ln1347_38_fu_624_p1;
wire   [11:0] mul_ln1347_15_fu_625_p1;
wire   [12:0] mul_ln1347_6_fu_626_p1;
wire   [14:0] tmp_fu_17610_p4;
wire   [15:0] tmp_70_fu_17628_p4;
wire   [19:0] shl_ln1273_1_fu_17638_p3;
wire   [25:0] shl_ln_fu_17620_p3;
wire  signed [25:0] sext_ln1273_fu_17646_p1;
wire   [25:0] r_V_13_fu_17650_p2;
wire   [25:0] ret_V_17_fu_17656_p2;
wire   [14:0] tmp_71_fu_17672_p4;
wire   [15:0] tmp_72_fu_17690_p4;
wire   [16:0] shl_ln1273_3_fu_17700_p3;
wire   [25:0] shl_ln1273_2_fu_17682_p3;
wire  signed [25:0] sext_ln1273_1_fu_17708_p1;
wire   [25:0] r_V_63_fu_17712_p2;
wire   [25:0] ret_V_67_fu_17718_p2;
wire   [25:0] ret_V_fu_17982_p2;
wire   [25:0] ret_V_14_fu_17998_p2;
wire   [25:0] ret_V_15_fu_18014_p2;
wire   [25:0] ret_V_16_fu_18030_p2;
wire   [25:0] ret_V_18_fu_18046_p2;
wire   [25:0] ret_V_19_fu_18062_p2;
wire   [25:0] ret_V_20_fu_18078_p2;
wire   [25:0] ret_V_21_fu_18094_p2;
wire   [25:0] ret_V_22_fu_18110_p2;
wire   [25:0] ret_V_23_fu_18126_p2;
wire   [25:0] ret_V_24_fu_18142_p2;
wire   [25:0] ret_V_25_fu_18158_p2;
wire   [25:0] ret_V_26_fu_18174_p2;
wire   [25:0] ret_V_27_fu_18190_p2;
wire   [25:0] ret_V_28_fu_18206_p2;
wire   [25:0] ret_V_29_fu_18222_p2;
wire   [25:0] ret_V_30_fu_18238_p2;
wire   [25:0] ret_V_31_fu_18254_p2;
wire   [25:0] ret_V_32_fu_18270_p2;
wire   [25:0] ret_V_33_fu_18286_p2;
wire   [25:0] ret_V_34_fu_18302_p2;
wire   [25:0] ret_V_35_fu_18318_p2;
wire   [25:0] ret_V_36_fu_18334_p2;
wire   [25:0] ret_V_37_fu_18350_p2;
wire   [25:0] ret_V_38_fu_18366_p2;
wire   [25:0] ret_V_39_fu_18382_p2;
wire   [25:0] ret_V_40_fu_18398_p2;
wire   [25:0] ret_V_41_fu_18414_p2;
wire   [25:0] ret_V_42_fu_18430_p2;
wire   [25:0] ret_V_43_fu_18446_p2;
wire   [25:0] ret_V_44_fu_18462_p2;
wire   [25:0] ret_V_45_fu_18478_p2;
wire   [25:0] ret_V_46_fu_18494_p2;
wire   [25:0] ret_V_47_fu_18510_p2;
wire   [25:0] ret_V_48_fu_18526_p2;
wire   [25:0] ret_V_49_fu_18542_p2;
wire   [25:0] ret_V_50_fu_18558_p2;
wire   [25:0] ret_V_51_fu_18574_p2;
wire   [25:0] ret_V_52_fu_18590_p2;
wire   [25:0] ret_V_53_fu_18606_p2;
wire   [25:0] ret_V_54_fu_18622_p2;
wire   [25:0] ret_V_55_fu_18638_p2;
wire   [25:0] ret_V_56_fu_18654_p2;
wire   [25:0] ret_V_57_fu_18670_p2;
wire   [25:0] ret_V_58_fu_18686_p2;
wire   [25:0] ret_V_59_fu_18702_p2;
wire   [25:0] ret_V_60_fu_18718_p2;
wire   [25:0] ret_V_61_fu_18734_p2;
wire   [25:0] ret_V_62_fu_18750_p2;
wire   [25:0] ret_V_63_fu_18766_p2;
wire   [25:0] ret_V_64_fu_18782_p2;
wire   [25:0] ret_V_65_fu_18798_p2;
wire   [25:0] ret_V_66_fu_18814_p2;
wire   [25:0] ret_V_68_fu_18830_p2;
wire   [25:0] ret_V_69_fu_18846_p2;
wire   [25:0] ret_V_70_fu_18862_p2;
wire   [25:0] ret_V_71_fu_18878_p2;
wire   [25:0] ret_V_72_fu_18894_p2;
wire   [25:0] ret_V_73_fu_18910_p2;
wire   [25:0] ret_V_74_fu_18926_p2;
wire   [25:0] ret_V_75_fu_18942_p2;
wire   [25:0] ret_V_76_fu_18958_p2;
wire   [15:0] trunc_ln818_62_fu_18964_p4;
wire   [15:0] trunc_ln818_61_fu_18948_p4;
wire   [15:0] trunc_ln818_60_fu_18932_p4;
wire   [15:0] trunc_ln818_59_fu_18916_p4;
wire   [15:0] trunc_ln818_58_fu_18900_p4;
wire   [15:0] trunc_ln818_57_fu_18884_p4;
wire   [15:0] trunc_ln818_56_fu_18868_p4;
wire   [15:0] trunc_ln818_55_fu_18852_p4;
wire   [15:0] trunc_ln818_54_fu_18836_p4;
wire   [15:0] trunc_ln818_52_fu_18820_p4;
wire   [15:0] trunc_ln818_51_fu_18804_p4;
wire   [15:0] trunc_ln818_50_fu_18788_p4;
wire   [15:0] trunc_ln818_49_fu_18772_p4;
wire   [15:0] trunc_ln818_48_fu_18756_p4;
wire   [15:0] trunc_ln818_47_fu_18740_p4;
wire   [15:0] trunc_ln818_46_fu_18724_p4;
wire   [15:0] trunc_ln818_45_fu_18708_p4;
wire   [15:0] trunc_ln818_44_fu_18692_p4;
wire   [15:0] trunc_ln818_43_fu_18676_p4;
wire   [15:0] trunc_ln818_42_fu_18660_p4;
wire   [15:0] trunc_ln818_41_fu_18644_p4;
wire   [15:0] trunc_ln818_40_fu_18628_p4;
wire   [15:0] trunc_ln818_39_fu_18612_p4;
wire   [15:0] trunc_ln818_38_fu_18596_p4;
wire   [15:0] trunc_ln818_37_fu_18580_p4;
wire   [15:0] trunc_ln818_36_fu_18564_p4;
wire   [15:0] trunc_ln818_35_fu_18548_p4;
wire   [15:0] trunc_ln818_34_fu_18532_p4;
wire   [15:0] trunc_ln818_33_fu_18516_p4;
wire   [15:0] trunc_ln818_32_fu_18500_p4;
wire   [15:0] trunc_ln818_31_fu_18484_p4;
wire   [15:0] trunc_ln818_30_fu_18468_p4;
wire   [15:0] trunc_ln818_29_fu_18452_p4;
wire   [15:0] trunc_ln818_28_fu_18436_p4;
wire   [15:0] trunc_ln818_27_fu_18420_p4;
wire   [15:0] trunc_ln818_26_fu_18404_p4;
wire   [15:0] trunc_ln818_25_fu_18388_p4;
wire   [15:0] trunc_ln818_24_fu_18372_p4;
wire   [15:0] trunc_ln818_23_fu_18356_p4;
wire   [15:0] trunc_ln818_22_fu_18340_p4;
wire   [15:0] trunc_ln818_21_fu_18324_p4;
wire   [15:0] trunc_ln818_20_fu_18308_p4;
wire   [15:0] trunc_ln818_19_fu_18292_p4;
wire   [15:0] trunc_ln818_18_fu_18276_p4;
wire   [15:0] trunc_ln818_17_fu_18260_p4;
wire   [15:0] trunc_ln818_16_fu_18244_p4;
wire   [15:0] trunc_ln818_15_fu_18228_p4;
wire   [15:0] trunc_ln818_14_fu_18212_p4;
wire   [15:0] trunc_ln818_13_fu_18196_p4;
wire   [15:0] trunc_ln818_12_fu_18180_p4;
wire   [15:0] trunc_ln818_11_fu_18164_p4;
wire   [15:0] trunc_ln818_10_fu_18148_p4;
wire   [15:0] trunc_ln818_1_fu_18132_p4;
wire   [15:0] trunc_ln818_s_fu_18116_p4;
wire   [15:0] trunc_ln818_9_fu_18100_p4;
wire   [15:0] trunc_ln818_8_fu_18084_p4;
wire   [15:0] trunc_ln818_7_fu_18068_p4;
wire   [15:0] trunc_ln818_6_fu_18052_p4;
wire   [15:0] trunc_ln818_4_fu_18036_p4;
wire   [15:0] trunc_ln818_3_fu_18020_p4;
wire   [15:0] trunc_ln818_2_fu_18004_p4;
wire   [15:0] trunc_ln_fu_17988_p4;
reg   [2:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
reg    ap_ST_fsm_state3_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 3'd1;
end

kernel_wrapper_mul_16s_13ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 26 ))
mul_16s_13ns_26_1_1_U1075(
    .din0(a_V_5_reg_19140),
    .din1(mul_ln1347_5_fu_563_p1),
    .dout(mul_ln1347_5_fu_563_p2)
);

kernel_wrapper_mul_16s_12ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
mul_16s_12ns_26_1_1_U1076(
    .din0(a_V_58_reg_19405),
    .din1(mul_ln1347_58_fu_564_p1),
    .dout(mul_ln1347_58_fu_564_p2)
);

kernel_wrapper_mul_16s_12ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
mul_16s_12ns_26_1_1_U1077(
    .din0(a_V_36_reg_19295),
    .din1(mul_ln1347_36_fu_565_p1),
    .dout(mul_ln1347_36_fu_565_p2)
);

kernel_wrapper_mul_16s_13ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 26 ))
mul_16s_13ns_26_1_1_U1078(
    .din0(a_V_4_reg_19135),
    .din1(mul_ln1347_4_fu_566_p1),
    .dout(mul_ln1347_4_fu_566_p2)
);

kernel_wrapper_mul_16s_13ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 26 ))
mul_16s_13ns_26_1_1_U1079(
    .din0(a_V_47_reg_19350),
    .din1(mul_ln1347_47_fu_567_p1),
    .dout(mul_ln1347_47_fu_567_p2)
);

kernel_wrapper_mul_16s_13ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 26 ))
mul_16s_13ns_26_1_1_U1080(
    .din0(a_V_8_reg_19155),
    .din1(mul_ln1347_8_fu_568_p1),
    .dout(mul_ln1347_8_fu_568_p2)
);

kernel_wrapper_mul_16s_13ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 26 ))
mul_16s_13ns_26_1_1_U1081(
    .din0(a_V_34_reg_19285),
    .din1(mul_ln1347_34_fu_569_p1),
    .dout(mul_ln1347_34_fu_569_p2)
);

kernel_wrapper_mul_16s_13ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 26 ))
mul_16s_13ns_26_1_1_U1082(
    .din0(a_V_29_reg_19260),
    .din1(mul_ln1347_29_fu_570_p1),
    .dout(mul_ln1347_29_fu_570_p2)
);

kernel_wrapper_mul_16s_13ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 26 ))
mul_16s_13ns_26_1_1_U1083(
    .din0(a_V_23_reg_19230),
    .din1(mul_ln1347_23_fu_571_p1),
    .dout(mul_ln1347_23_fu_571_p2)
);

kernel_wrapper_mul_16s_13ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 26 ))
mul_16s_13ns_26_1_1_U1084(
    .din0(a_V_61_reg_19115),
    .din1(mul_ln1347_61_fu_572_p1),
    .dout(mul_ln1347_61_fu_572_p2)
);

kernel_wrapper_mul_16s_12ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
mul_16s_12ns_26_1_1_U1085(
    .din0(a_V_54_reg_19385),
    .din1(mul_ln1347_54_fu_573_p1),
    .dout(mul_ln1347_54_fu_573_p2)
);

kernel_wrapper_mul_16s_13ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 26 ))
mul_16s_13ns_26_1_1_U1086(
    .din0(a_V_10_reg_19165),
    .din1(mul_ln1347_10_fu_574_p1),
    .dout(mul_ln1347_10_fu_574_p2)
);

kernel_wrapper_mul_16s_13ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 26 ))
mul_16s_13ns_26_1_1_U1087(
    .din0(a_V_57_reg_19400),
    .din1(mul_ln1347_57_fu_575_p1),
    .dout(mul_ln1347_57_fu_575_p2)
);

kernel_wrapper_mul_16s_13ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 26 ))
mul_16s_13ns_26_1_1_U1088(
    .din0(a_V_44_reg_19335),
    .din1(mul_ln1347_44_fu_576_p1),
    .dout(mul_ln1347_44_fu_576_p2)
);

kernel_wrapper_mul_16s_13ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 26 ))
mul_16s_13ns_26_1_1_U1089(
    .din0(a_V_60_reg_19110),
    .din1(mul_ln1347_60_fu_577_p1),
    .dout(mul_ln1347_60_fu_577_p2)
);

kernel_wrapper_mul_16s_12ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
mul_16s_12ns_26_1_1_U1090(
    .din0(a_V_30_reg_19265),
    .din1(mul_ln1347_30_fu_578_p1),
    .dout(mul_ln1347_30_fu_578_p2)
);

kernel_wrapper_mul_16s_13ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 26 ))
mul_16s_13ns_26_1_1_U1091(
    .din0(a_V_22_reg_19225),
    .din1(mul_ln1347_22_fu_579_p1),
    .dout(mul_ln1347_22_fu_579_p2)
);

kernel_wrapper_mul_16s_13ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 26 ))
mul_16s_13ns_26_1_1_U1092(
    .din0(a_V_18_reg_19205),
    .din1(mul_ln1347_18_fu_580_p1),
    .dout(mul_ln1347_18_fu_580_p2)
);

kernel_wrapper_mul_16s_12ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
mul_16s_12ns_26_1_1_U1093(
    .din0(a_V_17_reg_19200),
    .din1(mul_ln1347_17_fu_581_p1),
    .dout(mul_ln1347_17_fu_581_p2)
);

kernel_wrapper_mul_16s_13ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 26 ))
mul_16s_13ns_26_1_1_U1094(
    .din0(a_V_32_reg_19275),
    .din1(mul_ln1347_32_fu_582_p1),
    .dout(mul_ln1347_32_fu_582_p2)
);

kernel_wrapper_mul_16s_13ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 26 ))
mul_16s_13ns_26_1_1_U1095(
    .din0(a_V_7_reg_19150),
    .din1(mul_ln1347_7_fu_583_p1),
    .dout(mul_ln1347_7_fu_583_p2)
);

kernel_wrapper_mul_16s_12ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
mul_16s_12ns_26_1_1_U1096(
    .din0(a_V_46_reg_19345),
    .din1(mul_ln1347_46_fu_584_p1),
    .dout(mul_ln1347_46_fu_584_p2)
);

kernel_wrapper_mul_16s_12ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
mul_16s_12ns_26_1_1_U1097(
    .din0(a_V_40_reg_19315),
    .din1(mul_ln1347_40_fu_585_p1),
    .dout(mul_ln1347_40_fu_585_p2)
);

kernel_wrapper_mul_16s_13ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 26 ))
mul_16s_13ns_26_1_1_U1098(
    .din0(a_V_12_reg_19175),
    .din1(mul_ln1347_12_fu_587_p1),
    .dout(mul_ln1347_12_fu_587_p2)
);

kernel_wrapper_mul_16s_13ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 26 ))
mul_16s_13ns_26_1_1_U1099(
    .din0(a_V_20_reg_19215),
    .din1(mul_ln1347_20_fu_588_p1),
    .dout(mul_ln1347_20_fu_588_p2)
);

kernel_wrapper_mul_16s_13ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 26 ))
mul_16s_13ns_26_1_1_U1100(
    .din0(a_V_39_reg_19310),
    .din1(mul_ln1347_39_fu_589_p1),
    .dout(mul_ln1347_39_fu_589_p2)
);

kernel_wrapper_mul_16s_13ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 26 ))
mul_16s_13ns_26_1_1_U1101(
    .din0(a_V_24_reg_19235),
    .din1(mul_ln1347_24_fu_590_p1),
    .dout(mul_ln1347_24_fu_590_p2)
);

kernel_wrapper_mul_16s_13ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 26 ))
mul_16s_13ns_26_1_1_U1102(
    .din0(a_V_53_reg_19380),
    .din1(mul_ln1347_53_fu_591_p1),
    .dout(mul_ln1347_53_fu_591_p2)
);

kernel_wrapper_mul_16s_13ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 26 ))
mul_16s_13ns_26_1_1_U1103(
    .din0(a_V_52_reg_19375),
    .din1(mul_ln1347_52_fu_592_p1),
    .dout(mul_ln1347_52_fu_592_p2)
);

kernel_wrapper_mul_16s_13ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 26 ))
mul_16s_13ns_26_1_1_U1104(
    .din0(a_V_13_reg_19180),
    .din1(mul_ln1347_13_fu_593_p1),
    .dout(mul_ln1347_13_fu_593_p2)
);

kernel_wrapper_mul_16s_12ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
mul_16s_12ns_26_1_1_U1105(
    .din0(a_V_35_reg_19290),
    .din1(mul_ln1347_35_fu_594_p1),
    .dout(mul_ln1347_35_fu_594_p2)
);

kernel_wrapper_mul_16s_12ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
mul_16s_12ns_26_1_1_U1106(
    .din0(a_V_48_reg_19355),
    .din1(mul_ln1347_48_fu_595_p1),
    .dout(mul_ln1347_48_fu_595_p2)
);

kernel_wrapper_mul_16s_13ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 26 ))
mul_16s_13ns_26_1_1_U1107(
    .din0(a_V_1_reg_19120),
    .din1(mul_ln1347_1_fu_596_p1),
    .dout(mul_ln1347_1_fu_596_p2)
);

kernel_wrapper_mul_16s_13ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 26 ))
mul_16s_13ns_26_1_1_U1108(
    .din0(a_V_31_reg_19270),
    .din1(mul_ln1347_31_fu_597_p1),
    .dout(mul_ln1347_31_fu_597_p2)
);

kernel_wrapper_mul_16s_13ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 26 ))
mul_16s_13ns_26_1_1_U1109(
    .din0(a_V_59_reg_19410),
    .din1(mul_ln1347_59_fu_599_p1),
    .dout(mul_ln1347_59_fu_599_p2)
);

kernel_wrapper_mul_16s_13ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 26 ))
mul_16s_13ns_26_1_1_U1110(
    .din0(a_V_51_reg_19370),
    .din1(mul_ln1347_51_fu_600_p1),
    .dout(mul_ln1347_51_fu_600_p2)
);

kernel_wrapper_mul_16s_13ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 26 ))
mul_16s_13ns_26_1_1_U1111(
    .din0(a_V_49_reg_19360),
    .din1(mul_ln1347_49_fu_601_p1),
    .dout(mul_ln1347_49_fu_601_p2)
);

kernel_wrapper_mul_16s_12ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
mul_16s_12ns_26_1_1_U1112(
    .din0(a_V_37_reg_19300),
    .din1(mul_ln1347_37_fu_602_p1),
    .dout(mul_ln1347_37_fu_602_p2)
);

kernel_wrapper_mul_16s_12ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
mul_16s_12ns_26_1_1_U1113(
    .din0(a_V_56_reg_19395),
    .din1(mul_ln1347_56_fu_603_p1),
    .dout(mul_ln1347_56_fu_603_p2)
);

kernel_wrapper_mul_16s_13ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 26 ))
mul_16s_13ns_26_1_1_U1114(
    .din0(a_V_19_reg_19210),
    .din1(mul_ln1347_19_fu_604_p1),
    .dout(mul_ln1347_19_fu_604_p2)
);

kernel_wrapper_mul_16s_12ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
mul_16s_12ns_26_1_1_U1115(
    .din0(a_V_9_reg_19160),
    .din1(mul_ln1347_9_fu_605_p1),
    .dout(mul_ln1347_9_fu_605_p2)
);

kernel_wrapper_mul_16s_12ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
mul_16s_12ns_26_1_1_U1116(
    .din0(a_V_14_reg_19185),
    .din1(mul_ln1347_14_fu_606_p1),
    .dout(mul_ln1347_14_fu_606_p2)
);

kernel_wrapper_mul_16s_12ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
mul_16s_12ns_26_1_1_U1117(
    .din0(a_V_27_reg_19250),
    .din1(mul_ln1347_27_fu_607_p1),
    .dout(mul_ln1347_27_fu_607_p2)
);

kernel_wrapper_mul_16s_13ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 26 ))
mul_16s_13ns_26_1_1_U1118(
    .din0(a_V_25_reg_19240),
    .din1(mul_ln1347_25_fu_608_p1),
    .dout(mul_ln1347_25_fu_608_p2)
);

kernel_wrapper_mul_16s_13ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 26 ))
mul_16s_13ns_26_1_1_U1119(
    .din0(a_V_41_reg_19320),
    .din1(mul_ln1347_41_fu_609_p1),
    .dout(mul_ln1347_41_fu_609_p2)
);

kernel_wrapper_mul_16s_12ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
mul_16s_12ns_26_1_1_U1120(
    .din0(a_V_55_reg_19390),
    .din1(mul_ln1347_55_fu_610_p1),
    .dout(mul_ln1347_55_fu_610_p2)
);

kernel_wrapper_mul_16s_13ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 26 ))
mul_16s_13ns_26_1_1_U1121(
    .din0(a_V_43_reg_19330),
    .din1(mul_ln1347_43_fu_611_p1),
    .dout(mul_ln1347_43_fu_611_p2)
);

kernel_wrapper_mul_16s_12ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
mul_16s_12ns_26_1_1_U1122(
    .din0(a_V_50_reg_19365),
    .din1(mul_ln1347_50_fu_612_p1),
    .dout(mul_ln1347_50_fu_612_p2)
);

kernel_wrapper_mul_16s_13ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 26 ))
mul_16s_13ns_26_1_1_U1123(
    .din0(a_V_21_reg_19220),
    .din1(mul_ln1347_21_fu_613_p1),
    .dout(mul_ln1347_21_fu_613_p2)
);

kernel_wrapper_mul_16s_13ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 26 ))
mul_16s_13ns_26_1_1_U1124(
    .din0(a_V_2_reg_19125),
    .din1(mul_ln1347_2_fu_614_p1),
    .dout(mul_ln1347_2_fu_614_p2)
);

kernel_wrapper_mul_16s_13ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 26 ))
mul_16s_13ns_26_1_1_U1125(
    .din0(a_V_11_reg_19170),
    .din1(mul_ln1347_11_fu_615_p1),
    .dout(mul_ln1347_11_fu_615_p2)
);

kernel_wrapper_mul_16s_13ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 26 ))
mul_16s_13ns_26_1_1_U1126(
    .din0(a_V_3_reg_19130),
    .din1(mul_ln1347_3_fu_616_p1),
    .dout(mul_ln1347_3_fu_616_p2)
);

kernel_wrapper_mul_16s_12ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
mul_16s_12ns_26_1_1_U1127(
    .din0(a_V_28_reg_19255),
    .din1(mul_ln1347_28_fu_617_p1),
    .dout(mul_ln1347_28_fu_617_p2)
);

kernel_wrapper_mul_16s_13ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 26 ))
mul_16s_13ns_26_1_1_U1128(
    .din0(a_V_reg_19105),
    .din1(mul_ln1347_fu_618_p1),
    .dout(mul_ln1347_fu_618_p2)
);

kernel_wrapper_mul_16s_13ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 26 ))
mul_16s_13ns_26_1_1_U1129(
    .din0(a_V_16_reg_19195),
    .din1(mul_ln1347_16_fu_619_p1),
    .dout(mul_ln1347_16_fu_619_p2)
);

kernel_wrapper_mul_16s_12ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
mul_16s_12ns_26_1_1_U1130(
    .din0(a_V_45_reg_19340),
    .din1(mul_ln1347_45_fu_620_p1),
    .dout(mul_ln1347_45_fu_620_p2)
);

kernel_wrapper_mul_16s_12ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
mul_16s_12ns_26_1_1_U1131(
    .din0(a_V_26_reg_19245),
    .din1(mul_ln1347_26_fu_621_p1),
    .dout(mul_ln1347_26_fu_621_p2)
);

kernel_wrapper_mul_16s_12ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
mul_16s_12ns_26_1_1_U1132(
    .din0(a_V_42_reg_19325),
    .din1(mul_ln1347_42_fu_622_p1),
    .dout(mul_ln1347_42_fu_622_p2)
);

kernel_wrapper_mul_16s_12ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
mul_16s_12ns_26_1_1_U1133(
    .din0(a_V_33_reg_19280),
    .din1(mul_ln1347_33_fu_623_p1),
    .dout(mul_ln1347_33_fu_623_p2)
);

kernel_wrapper_mul_16s_12ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
mul_16s_12ns_26_1_1_U1134(
    .din0(a_V_38_reg_19305),
    .din1(mul_ln1347_38_fu_624_p1),
    .dout(mul_ln1347_38_fu_624_p2)
);

kernel_wrapper_mul_16s_12ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
mul_16s_12ns_26_1_1_U1135(
    .din0(a_V_15_reg_19190),
    .din1(mul_ln1347_15_fu_625_p1),
    .dout(mul_ln1347_15_fu_625_p2)
);

kernel_wrapper_mul_16s_13ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 26 ))
mul_16s_13ns_26_1_1_U1136(
    .din0(a_V_6_reg_19145),
    .din1(mul_ln1347_6_fu_626_p1),
    .dout(mul_ln1347_6_fu_626_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((layer21_out_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((real_start == 1'b1) & (internal_ap_ready == 1'b0))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        a_V_10_reg_19165 <= {{layer19_out_dout[191:176]}};
        a_V_11_reg_19170 <= {{layer19_out_dout[207:192]}};
        a_V_12_reg_19175 <= {{layer19_out_dout[223:208]}};
        a_V_13_reg_19180 <= {{layer19_out_dout[239:224]}};
        a_V_14_reg_19185 <= {{layer19_out_dout[255:240]}};
        a_V_15_reg_19190 <= {{layer19_out_dout[271:256]}};
        a_V_16_reg_19195 <= {{layer19_out_dout[287:272]}};
        a_V_17_reg_19200 <= {{layer19_out_dout[303:288]}};
        a_V_18_reg_19205 <= {{layer19_out_dout[319:304]}};
        a_V_19_reg_19210 <= {{layer19_out_dout[335:320]}};
        a_V_1_reg_19120 <= {{layer19_out_dout[31:16]}};
        a_V_20_reg_19215 <= {{layer19_out_dout[351:336]}};
        a_V_21_reg_19220 <= {{layer19_out_dout[367:352]}};
        a_V_22_reg_19225 <= {{layer19_out_dout[383:368]}};
        a_V_23_reg_19230 <= {{layer19_out_dout[399:384]}};
        a_V_24_reg_19235 <= {{layer19_out_dout[415:400]}};
        a_V_25_reg_19240 <= {{layer19_out_dout[431:416]}};
        a_V_26_reg_19245 <= {{layer19_out_dout[447:432]}};
        a_V_27_reg_19250 <= {{layer19_out_dout[463:448]}};
        a_V_28_reg_19255 <= {{layer19_out_dout[479:464]}};
        a_V_29_reg_19260 <= {{layer19_out_dout[495:480]}};
        a_V_2_reg_19125 <= {{layer19_out_dout[47:32]}};
        a_V_30_reg_19265 <= {{layer19_out_dout[511:496]}};
        a_V_31_reg_19270 <= {{layer19_out_dout[527:512]}};
        a_V_32_reg_19275 <= {{layer19_out_dout[543:528]}};
        a_V_33_reg_19280 <= {{layer19_out_dout[559:544]}};
        a_V_34_reg_19285 <= {{layer19_out_dout[575:560]}};
        a_V_35_reg_19290 <= {{layer19_out_dout[591:576]}};
        a_V_36_reg_19295 <= {{layer19_out_dout[607:592]}};
        a_V_37_reg_19300 <= {{layer19_out_dout[623:608]}};
        a_V_38_reg_19305 <= {{layer19_out_dout[639:624]}};
        a_V_39_reg_19310 <= {{layer19_out_dout[655:640]}};
        a_V_3_reg_19130 <= {{layer19_out_dout[63:48]}};
        a_V_40_reg_19315 <= {{layer19_out_dout[671:656]}};
        a_V_41_reg_19320 <= {{layer19_out_dout[687:672]}};
        a_V_42_reg_19325 <= {{layer19_out_dout[703:688]}};
        a_V_43_reg_19330 <= {{layer19_out_dout[719:704]}};
        a_V_44_reg_19335 <= {{layer19_out_dout[735:720]}};
        a_V_45_reg_19340 <= {{layer19_out_dout[751:736]}};
        a_V_46_reg_19345 <= {{layer19_out_dout[767:752]}};
        a_V_47_reg_19350 <= {{layer19_out_dout[783:768]}};
        a_V_48_reg_19355 <= {{layer19_out_dout[799:784]}};
        a_V_49_reg_19360 <= {{layer19_out_dout[815:800]}};
        a_V_4_reg_19135 <= {{layer19_out_dout[95:80]}};
        a_V_50_reg_19365 <= {{layer19_out_dout[831:816]}};
        a_V_51_reg_19370 <= {{layer19_out_dout[847:832]}};
        a_V_52_reg_19375 <= {{layer19_out_dout[863:848]}};
        a_V_53_reg_19380 <= {{layer19_out_dout[895:880]}};
        a_V_54_reg_19385 <= {{layer19_out_dout[911:896]}};
        a_V_55_reg_19390 <= {{layer19_out_dout[927:912]}};
        a_V_56_reg_19395 <= {{layer19_out_dout[943:928]}};
        a_V_57_reg_19400 <= {{layer19_out_dout[959:944]}};
        a_V_58_reg_19405 <= {{layer19_out_dout[975:960]}};
        a_V_59_reg_19410 <= {{layer19_out_dout[991:976]}};
        a_V_5_reg_19140 <= {{layer19_out_dout[111:96]}};
        a_V_60_reg_19110 <= {{layer19_out_dout[1007:992]}};
        a_V_61_reg_19115 <= {{layer19_out_dout[1023:1008]}};
        a_V_6_reg_19145 <= {{layer19_out_dout[127:112]}};
        a_V_7_reg_19150 <= {{layer19_out_dout[143:128]}};
        a_V_8_reg_19155 <= {{layer19_out_dout[159:144]}};
        a_V_9_reg_19160 <= {{layer19_out_dout[175:160]}};
        a_V_reg_19105 <= a_V_fu_16996_p1;
        trunc_ln818_53_reg_19420 <= {{ret_V_67_fu_17718_p2[25:10]}};
        trunc_ln818_5_reg_19415 <= {{ret_V_17_fu_17656_p2[25:10]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        mul_ln1347_10_reg_16787 <= mul_ln1347_10_fu_574_p2;
        mul_ln1347_11_reg_16791 <= mul_ln1347_11_fu_615_p2;
        mul_ln1347_12_reg_16795 <= mul_ln1347_12_fu_587_p2;
        mul_ln1347_13_reg_16799 <= mul_ln1347_13_fu_593_p2;
        mul_ln1347_14_reg_16803 <= mul_ln1347_14_fu_606_p2;
        mul_ln1347_15_reg_16807 <= mul_ln1347_15_fu_625_p2;
        mul_ln1347_16_reg_16811 <= mul_ln1347_16_fu_619_p2;
        mul_ln1347_17_reg_16815 <= mul_ln1347_17_fu_581_p2;
        mul_ln1347_18_reg_16819 <= mul_ln1347_18_fu_580_p2;
        mul_ln1347_19_reg_16823 <= mul_ln1347_19_fu_604_p2;
        mul_ln1347_1_reg_16751 <= mul_ln1347_1_fu_596_p2;
        mul_ln1347_20_reg_16827 <= mul_ln1347_20_fu_588_p2;
        mul_ln1347_21_reg_16831 <= mul_ln1347_21_fu_613_p2;
        mul_ln1347_22_reg_16835 <= mul_ln1347_22_fu_579_p2;
        mul_ln1347_23_reg_16839 <= mul_ln1347_23_fu_571_p2;
        mul_ln1347_24_reg_16843 <= mul_ln1347_24_fu_590_p2;
        mul_ln1347_25_reg_16847 <= mul_ln1347_25_fu_608_p2;
        mul_ln1347_26_reg_16851 <= mul_ln1347_26_fu_621_p2;
        mul_ln1347_27_reg_16855 <= mul_ln1347_27_fu_607_p2;
        mul_ln1347_28_reg_16859 <= mul_ln1347_28_fu_617_p2;
        mul_ln1347_29_reg_16863 <= mul_ln1347_29_fu_570_p2;
        mul_ln1347_2_reg_16755 <= mul_ln1347_2_fu_614_p2;
        mul_ln1347_30_reg_16867 <= mul_ln1347_30_fu_578_p2;
        mul_ln1347_31_reg_16871 <= mul_ln1347_31_fu_597_p2;
        mul_ln1347_32_reg_16875 <= mul_ln1347_32_fu_582_p2;
        mul_ln1347_33_reg_16879 <= mul_ln1347_33_fu_623_p2;
        mul_ln1347_34_reg_16883 <= mul_ln1347_34_fu_569_p2;
        mul_ln1347_35_reg_16887 <= mul_ln1347_35_fu_594_p2;
        mul_ln1347_36_reg_16891 <= mul_ln1347_36_fu_565_p2;
        mul_ln1347_37_reg_16895 <= mul_ln1347_37_fu_602_p2;
        mul_ln1347_38_reg_16899 <= mul_ln1347_38_fu_624_p2;
        mul_ln1347_39_reg_16903 <= mul_ln1347_39_fu_589_p2;
        mul_ln1347_3_reg_16759 <= mul_ln1347_3_fu_616_p2;
        mul_ln1347_40_reg_16907 <= mul_ln1347_40_fu_585_p2;
        mul_ln1347_41_reg_16911 <= mul_ln1347_41_fu_609_p2;
        mul_ln1347_42_reg_16915 <= mul_ln1347_42_fu_622_p2;
        mul_ln1347_43_reg_16919 <= mul_ln1347_43_fu_611_p2;
        mul_ln1347_44_reg_16923 <= mul_ln1347_44_fu_576_p2;
        mul_ln1347_45_reg_16927 <= mul_ln1347_45_fu_620_p2;
        mul_ln1347_46_reg_16931 <= mul_ln1347_46_fu_584_p2;
        mul_ln1347_47_reg_16935 <= mul_ln1347_47_fu_567_p2;
        mul_ln1347_48_reg_16939 <= mul_ln1347_48_fu_595_p2;
        mul_ln1347_49_reg_16943 <= mul_ln1347_49_fu_601_p2;
        mul_ln1347_4_reg_16763 <= mul_ln1347_4_fu_566_p2;
        mul_ln1347_50_reg_16947 <= mul_ln1347_50_fu_612_p2;
        mul_ln1347_51_reg_16951 <= mul_ln1347_51_fu_600_p2;
        mul_ln1347_52_reg_16955 <= mul_ln1347_52_fu_592_p2;
        mul_ln1347_53_reg_16959 <= mul_ln1347_53_fu_591_p2;
        mul_ln1347_54_reg_16963 <= mul_ln1347_54_fu_573_p2;
        mul_ln1347_55_reg_16967 <= mul_ln1347_55_fu_610_p2;
        mul_ln1347_56_reg_16971 <= mul_ln1347_56_fu_603_p2;
        mul_ln1347_57_reg_16975 <= mul_ln1347_57_fu_575_p2;
        mul_ln1347_58_reg_16979 <= mul_ln1347_58_fu_564_p2;
        mul_ln1347_59_reg_16983 <= mul_ln1347_59_fu_599_p2;
        mul_ln1347_5_reg_16767 <= mul_ln1347_5_fu_563_p2;
        mul_ln1347_60_reg_16987 <= mul_ln1347_60_fu_577_p2;
        mul_ln1347_61_reg_16991 <= mul_ln1347_61_fu_572_p2;
        mul_ln1347_6_reg_16771 <= mul_ln1347_6_fu_626_p2;
        mul_ln1347_7_reg_16775 <= mul_ln1347_7_fu_583_p2;
        mul_ln1347_8_reg_16779 <= mul_ln1347_8_fu_568_p2;
        mul_ln1347_9_reg_16783 <= mul_ln1347_9_fu_605_p2;
        mul_ln1347_reg_16747 <= mul_ln1347_fu_618_p2;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) | (layer19_out_empty_n == 1'b0) | (ap_done_reg == 1'b1))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

always @ (*) begin
    if ((layer21_out_full_n == 1'b0)) begin
        ap_ST_fsm_state3_blk = 1'b1;
    end else begin
        ap_ST_fsm_state3_blk = 1'b0;
    end
end

always @ (*) begin
    if (((layer21_out_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((layer21_out_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        layer19_out_blk_n = layer19_out_empty_n;
    end else begin
        layer19_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (layer19_out_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        layer19_out_read = 1'b1;
    end else begin
        layer19_out_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        layer21_out_blk_n = layer21_out_full_n;
    end else begin
        layer21_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((layer21_out_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        layer21_out_write = 1'b1;
    end else begin
        layer21_out_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((real_start == 1'b1) & (start_once_reg == 1'b0))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((real_start == 1'b0) | (layer19_out_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if (((layer21_out_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_V_fu_16996_p1 = layer19_out_dout[15:0];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

always @ (*) begin
    ap_block_state1 = ((real_start == 1'b0) | (layer19_out_empty_n == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_ready = internal_ap_ready;

assign layer21_out_din = {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{trunc_ln818_62_fu_18964_p4}, {trunc_ln818_61_fu_18948_p4}}, {trunc_ln818_60_fu_18932_p4}}, {trunc_ln818_59_fu_18916_p4}}, {trunc_ln818_58_fu_18900_p4}}, {trunc_ln818_57_fu_18884_p4}}, {trunc_ln818_56_fu_18868_p4}}, {trunc_ln818_55_fu_18852_p4}}, {trunc_ln818_54_fu_18836_p4}}, {trunc_ln818_53_reg_19420}}, {trunc_ln818_52_fu_18820_p4}}, {trunc_ln818_51_fu_18804_p4}}, {trunc_ln818_50_fu_18788_p4}}, {trunc_ln818_49_fu_18772_p4}}, {trunc_ln818_48_fu_18756_p4}}, {trunc_ln818_47_fu_18740_p4}}, {trunc_ln818_46_fu_18724_p4}}, {trunc_ln818_45_fu_18708_p4}}, {trunc_ln818_44_fu_18692_p4}}, {trunc_ln818_43_fu_18676_p4}}, {trunc_ln818_42_fu_18660_p4}}, {trunc_ln818_41_fu_18644_p4}}, {trunc_ln818_40_fu_18628_p4}}, {trunc_ln818_39_fu_18612_p4}}, {trunc_ln818_38_fu_18596_p4}}, {trunc_ln818_37_fu_18580_p4}}, {trunc_ln818_36_fu_18564_p4}}, {trunc_ln818_35_fu_18548_p4}}, {trunc_ln818_34_fu_18532_p4}}, {trunc_ln818_33_fu_18516_p4}}, {trunc_ln818_32_fu_18500_p4}}, {trunc_ln818_31_fu_18484_p4}}, {trunc_ln818_30_fu_18468_p4}}, {trunc_ln818_29_fu_18452_p4}}, {trunc_ln818_28_fu_18436_p4}}, {trunc_ln818_27_fu_18420_p4}}, {trunc_ln818_26_fu_18404_p4}}, {trunc_ln818_25_fu_18388_p4}}, {trunc_ln818_24_fu_18372_p4}}, {trunc_ln818_23_fu_18356_p4}}, {trunc_ln818_22_fu_18340_p4}}, {trunc_ln818_21_fu_18324_p4}}, {trunc_ln818_20_fu_18308_p4}}, {trunc_ln818_19_fu_18292_p4}}, {trunc_ln818_18_fu_18276_p4}}, {trunc_ln818_17_fu_18260_p4}}, {trunc_ln818_16_fu_18244_p4}}, {trunc_ln818_15_fu_18228_p4}}, {trunc_ln818_14_fu_18212_p4}}, {trunc_ln818_13_fu_18196_p4}}, {trunc_ln818_12_fu_18180_p4}}, {trunc_ln818_11_fu_18164_p4}}, {trunc_ln818_10_fu_18148_p4}}, {trunc_ln818_1_fu_18132_p4}}, {trunc_ln818_s_fu_18116_p4}}, {trunc_ln818_9_fu_18100_p4}}, {trunc_ln818_8_fu_18084_p4}}, {trunc_ln818_7_fu_18068_p4}}, {trunc_ln818_6_fu_18052_p4}}, {trunc_ln818_5_reg_19415}}, {trunc_ln818_4_fu_18036_p4}}, {trunc_ln818_3_fu_18020_p4}}, {trunc_ln818_2_fu_18004_p4}}, {trunc_ln_fu_17988_p4}};

assign mul_ln1347_10_fu_574_p1 = 26'd2376;

assign mul_ln1347_11_fu_615_p1 = 26'd2224;

assign mul_ln1347_12_fu_587_p1 = 26'd2181;

assign mul_ln1347_13_fu_593_p1 = 26'd2284;

assign mul_ln1347_14_fu_606_p1 = 26'd1571;

assign mul_ln1347_15_fu_625_p1 = 26'd1905;

assign mul_ln1347_16_fu_619_p1 = 26'd2131;

assign mul_ln1347_17_fu_581_p1 = 26'd1744;

assign mul_ln1347_18_fu_580_p1 = 26'd2232;

assign mul_ln1347_19_fu_604_p1 = 26'd2215;

assign mul_ln1347_1_fu_596_p1 = 26'd2479;

assign mul_ln1347_20_fu_588_p1 = 26'd2712;

assign mul_ln1347_21_fu_613_p1 = 26'd2700;

assign mul_ln1347_22_fu_579_p1 = 26'd2353;

assign mul_ln1347_23_fu_571_p1 = 26'd2540;

assign mul_ln1347_24_fu_590_p1 = 26'd2395;

assign mul_ln1347_25_fu_608_p1 = 26'd2686;

assign mul_ln1347_26_fu_621_p1 = 26'd1922;

assign mul_ln1347_27_fu_607_p1 = 26'd1993;

assign mul_ln1347_28_fu_617_p1 = 26'd1958;

assign mul_ln1347_29_fu_570_p1 = 26'd2408;

assign mul_ln1347_2_fu_614_p1 = 26'd2268;

assign mul_ln1347_30_fu_578_p1 = 26'd2008;

assign mul_ln1347_31_fu_597_p1 = 26'd2382;

assign mul_ln1347_32_fu_582_p1 = 26'd2109;

assign mul_ln1347_33_fu_623_p1 = 26'd2025;

assign mul_ln1347_34_fu_569_p1 = 26'd2091;

assign mul_ln1347_35_fu_594_p1 = 26'd1948;

assign mul_ln1347_36_fu_565_p1 = 26'd1909;

assign mul_ln1347_37_fu_602_p1 = 26'd1888;

assign mul_ln1347_38_fu_624_p1 = 26'd1610;

assign mul_ln1347_39_fu_589_p1 = 26'd2482;

assign mul_ln1347_3_fu_616_p1 = 26'd2459;

assign mul_ln1347_40_fu_585_p1 = 26'd1855;

assign mul_ln1347_41_fu_609_p1 = 26'd2074;

assign mul_ln1347_42_fu_622_p1 = 26'd1678;

assign mul_ln1347_43_fu_611_p1 = 26'd2365;

assign mul_ln1347_44_fu_576_p1 = 26'd2348;

assign mul_ln1347_45_fu_620_p1 = 26'd1767;

assign mul_ln1347_46_fu_584_p1 = 26'd1990;

assign mul_ln1347_47_fu_567_p1 = 26'd2095;

assign mul_ln1347_48_fu_595_p1 = 26'd2005;

assign mul_ln1347_49_fu_601_p1 = 26'd2631;

assign mul_ln1347_4_fu_566_p1 = 26'd2769;

assign mul_ln1347_50_fu_612_p1 = 26'd1851;

assign mul_ln1347_51_fu_600_p1 = 26'd2601;

assign mul_ln1347_52_fu_592_p1 = 26'd2285;

assign mul_ln1347_53_fu_591_p1 = 26'd2689;

assign mul_ln1347_54_fu_573_p1 = 26'd2006;

assign mul_ln1347_55_fu_610_p1 = 26'd1946;

assign mul_ln1347_56_fu_603_p1 = 26'd1777;

assign mul_ln1347_57_fu_575_p1 = 26'd2366;

assign mul_ln1347_58_fu_564_p1 = 26'd1722;

assign mul_ln1347_59_fu_599_p1 = 26'd2357;

assign mul_ln1347_5_fu_563_p1 = 26'd2149;

assign mul_ln1347_60_fu_577_p1 = 26'd2470;

assign mul_ln1347_61_fu_572_p1 = 26'd2262;

assign mul_ln1347_6_fu_626_p1 = 26'd2087;

assign mul_ln1347_7_fu_583_p1 = 26'd2441;

assign mul_ln1347_8_fu_568_p1 = 26'd2094;

assign mul_ln1347_9_fu_605_p1 = 26'd1567;

assign mul_ln1347_fu_618_p1 = 26'd2655;

assign r_V_13_fu_17650_p2 = ($signed(shl_ln_fu_17620_p3) - $signed(sext_ln1273_fu_17646_p1));

assign r_V_63_fu_17712_p2 = ($signed(shl_ln1273_2_fu_17682_p3) - $signed(sext_ln1273_1_fu_17708_p1));

assign ret_V_14_fu_17998_p2 = ($signed(mul_ln1347_1_reg_16751) + $signed(26'd67075072));

assign ret_V_15_fu_18014_p2 = (mul_ln1347_2_reg_16755 + 26'd388096);

assign ret_V_16_fu_18030_p2 = (mul_ln1347_3_reg_16759 + 26'd17408);

assign ret_V_17_fu_17656_p2 = ($signed(r_V_13_fu_17650_p2) + $signed(26'd66640896));

assign ret_V_18_fu_18046_p2 = (mul_ln1347_4_reg_16763 + 26'd363520);

assign ret_V_19_fu_18062_p2 = ($signed(mul_ln1347_5_reg_16767) + $signed(26'd66269184));

assign ret_V_20_fu_18078_p2 = ($signed(mul_ln1347_6_reg_16771) + $signed(26'd67083264));

assign ret_V_21_fu_18094_p2 = ($signed(mul_ln1347_7_reg_16775) + $signed(26'd66969600));

assign ret_V_22_fu_18110_p2 = ($signed(mul_ln1347_8_reg_16779) + $signed(26'd66755584));

assign ret_V_23_fu_18126_p2 = (mul_ln1347_9_reg_16783 + 26'd149504);

assign ret_V_24_fu_18142_p2 = (mul_ln1347_10_reg_16787 + 26'd884736);

assign ret_V_25_fu_18158_p2 = ($signed(mul_ln1347_11_reg_16791) + $signed(26'd66917376));

assign ret_V_26_fu_18174_p2 = (mul_ln1347_12_reg_16795 + 26'd371712);

assign ret_V_27_fu_18190_p2 = ($signed(mul_ln1347_13_reg_16799) + $signed(26'd65829888));

assign ret_V_28_fu_18206_p2 = ($signed(mul_ln1347_14_reg_16803) + $signed(26'd66992128));

assign ret_V_29_fu_18222_p2 = ($signed(mul_ln1347_15_reg_16807) + $signed(26'd66896896));

assign ret_V_30_fu_18238_p2 = (mul_ln1347_16_reg_16811 + 26'd450560);

assign ret_V_31_fu_18254_p2 = (mul_ln1347_17_reg_16815 + 26'd67584);

assign ret_V_32_fu_18270_p2 = (mul_ln1347_18_reg_16819 + 26'd152576);

assign ret_V_33_fu_18286_p2 = ($signed(mul_ln1347_19_reg_16823) + $signed(26'd66466816));

assign ret_V_34_fu_18302_p2 = (mul_ln1347_20_reg_16827 + 26'd150528);

assign ret_V_35_fu_18318_p2 = ($signed(mul_ln1347_21_reg_16831) + $signed(26'd66241536));

assign ret_V_36_fu_18334_p2 = (mul_ln1347_22_reg_16835 + 26'd498688);

assign ret_V_37_fu_18350_p2 = ($signed(mul_ln1347_23_reg_16839) + $signed(26'd66089984));

assign ret_V_38_fu_18366_p2 = (mul_ln1347_24_reg_16843 + 26'd851968);

assign ret_V_39_fu_18382_p2 = ($signed(mul_ln1347_25_reg_16847) + $signed(26'd67059712));

assign ret_V_40_fu_18398_p2 = (mul_ln1347_26_reg_16851 + 26'd184320);

assign ret_V_41_fu_18414_p2 = ($signed(mul_ln1347_27_reg_16855) + $signed(26'd66073600));

assign ret_V_42_fu_18430_p2 = ($signed(mul_ln1347_28_reg_16859) + $signed(26'd66463744));

assign ret_V_43_fu_18446_p2 = (mul_ln1347_29_reg_16863 + 26'd310272);

assign ret_V_44_fu_18462_p2 = ($signed(mul_ln1347_30_reg_16867) + $signed(26'd66828288));

assign ret_V_45_fu_18478_p2 = ($signed(mul_ln1347_31_reg_16871) + $signed(26'd66976768));

assign ret_V_46_fu_18494_p2 = (mul_ln1347_32_reg_16875 + 26'd212992);

assign ret_V_47_fu_18510_p2 = ($signed(mul_ln1347_33_reg_16879) + $signed(26'd66852864));

assign ret_V_48_fu_18526_p2 = ($signed(mul_ln1347_34_reg_16883) + $signed(26'd66562048));

assign ret_V_49_fu_18542_p2 = ($signed(mul_ln1347_35_reg_16887) + $signed(26'd66828288));

assign ret_V_50_fu_18558_p2 = ($signed(mul_ln1347_36_reg_16891) + $signed(26'd66648064));

assign ret_V_51_fu_18574_p2 = ($signed(mul_ln1347_37_reg_16895) + $signed(26'd66501632));

assign ret_V_52_fu_18590_p2 = ($signed(mul_ln1347_38_reg_16899) + $signed(26'd67059712));

assign ret_V_53_fu_18606_p2 = ($signed(mul_ln1347_39_reg_16903) + $signed(26'd65807360));

assign ret_V_54_fu_18622_p2 = (mul_ln1347_40_reg_16907 + 26'd157696);

assign ret_V_55_fu_18638_p2 = (mul_ln1347_41_reg_16911 + 26'd39936);

assign ret_V_56_fu_18654_p2 = ($signed(mul_ln1347_42_reg_16915) + $signed(26'd66987008));

assign ret_V_57_fu_18670_p2 = ($signed(mul_ln1347_43_reg_16919) + $signed(26'd66152448));

assign ret_V_58_fu_18686_p2 = ($signed(mul_ln1347_44_reg_16923) + $signed(26'd67054592));

assign ret_V_59_fu_18702_p2 = ($signed(mul_ln1347_45_reg_16927) + $signed(26'd66525184));

assign ret_V_60_fu_18718_p2 = ($signed(mul_ln1347_46_reg_16931) + $signed(26'd66370560));

assign ret_V_61_fu_18734_p2 = (mul_ln1347_47_reg_16935 + 26'd410624);

assign ret_V_62_fu_18750_p2 = ($signed(mul_ln1347_48_reg_16939) + $signed(26'd66534400));

assign ret_V_63_fu_18766_p2 = ($signed(mul_ln1347_49_reg_16943) + $signed(26'd66967552));

assign ret_V_64_fu_18782_p2 = (mul_ln1347_50_reg_16947 + 26'd205824);

assign ret_V_65_fu_18798_p2 = ($signed(mul_ln1347_51_reg_16951) + $signed(26'd66366464));

assign ret_V_66_fu_18814_p2 = ($signed(mul_ln1347_52_reg_16955) + $signed(26'd67084288));

assign ret_V_67_fu_17718_p2 = (r_V_63_fu_17712_p2 + 26'd98304);

assign ret_V_68_fu_18830_p2 = ($signed(mul_ln1347_53_reg_16959) + $signed(26'd66736128));

assign ret_V_69_fu_18846_p2 = (mul_ln1347_54_reg_16963 + 26'd881664);

assign ret_V_70_fu_18862_p2 = ($signed(mul_ln1347_55_reg_16967) + $signed(26'd66542592));

assign ret_V_71_fu_18878_p2 = (mul_ln1347_56_reg_16971 + 26'd643072);

assign ret_V_72_fu_18894_p2 = (mul_ln1347_57_reg_16975 + 26'd646144);

assign ret_V_73_fu_18910_p2 = (mul_ln1347_58_reg_16979 + 26'd655360);

assign ret_V_74_fu_18926_p2 = ($signed(mul_ln1347_59_reg_16983) + $signed(26'd66920448));

assign ret_V_75_fu_18942_p2 = ($signed(mul_ln1347_60_reg_16987) + $signed(26'd66257920));

assign ret_V_76_fu_18958_p2 = ($signed(mul_ln1347_61_reg_16991) + $signed(26'd66992128));

assign ret_V_fu_17982_p2 = ($signed(mul_ln1347_reg_16747) + $signed(26'd66614272));

assign sext_ln1273_1_fu_17708_p1 = $signed(shl_ln1273_3_fu_17700_p3);

assign sext_ln1273_fu_17646_p1 = $signed(shl_ln1273_1_fu_17638_p3);

assign shl_ln1273_1_fu_17638_p3 = {{tmp_70_fu_17628_p4}, {4'd0}};

assign shl_ln1273_2_fu_17682_p3 = {{tmp_71_fu_17672_p4}, {11'd0}};

assign shl_ln1273_3_fu_17700_p3 = {{tmp_72_fu_17690_p4}, {1'd0}};

assign shl_ln_fu_17620_p3 = {{tmp_fu_17610_p4}, {11'd0}};

assign start_out = real_start;

assign tmp_70_fu_17628_p4 = {{layer19_out_dout[79:64]}};

assign tmp_71_fu_17672_p4 = {{layer19_out_dout[878:864]}};

assign tmp_72_fu_17690_p4 = {{layer19_out_dout[879:864]}};

assign tmp_fu_17610_p4 = {{layer19_out_dout[78:64]}};

assign trunc_ln818_10_fu_18148_p4 = {{ret_V_24_fu_18142_p2[25:10]}};

assign trunc_ln818_11_fu_18164_p4 = {{ret_V_25_fu_18158_p2[25:10]}};

assign trunc_ln818_12_fu_18180_p4 = {{ret_V_26_fu_18174_p2[25:10]}};

assign trunc_ln818_13_fu_18196_p4 = {{ret_V_27_fu_18190_p2[25:10]}};

assign trunc_ln818_14_fu_18212_p4 = {{ret_V_28_fu_18206_p2[25:10]}};

assign trunc_ln818_15_fu_18228_p4 = {{ret_V_29_fu_18222_p2[25:10]}};

assign trunc_ln818_16_fu_18244_p4 = {{ret_V_30_fu_18238_p2[25:10]}};

assign trunc_ln818_17_fu_18260_p4 = {{ret_V_31_fu_18254_p2[25:10]}};

assign trunc_ln818_18_fu_18276_p4 = {{ret_V_32_fu_18270_p2[25:10]}};

assign trunc_ln818_19_fu_18292_p4 = {{ret_V_33_fu_18286_p2[25:10]}};

assign trunc_ln818_1_fu_18132_p4 = {{ret_V_23_fu_18126_p2[25:10]}};

assign trunc_ln818_20_fu_18308_p4 = {{ret_V_34_fu_18302_p2[25:10]}};

assign trunc_ln818_21_fu_18324_p4 = {{ret_V_35_fu_18318_p2[25:10]}};

assign trunc_ln818_22_fu_18340_p4 = {{ret_V_36_fu_18334_p2[25:10]}};

assign trunc_ln818_23_fu_18356_p4 = {{ret_V_37_fu_18350_p2[25:10]}};

assign trunc_ln818_24_fu_18372_p4 = {{ret_V_38_fu_18366_p2[25:10]}};

assign trunc_ln818_25_fu_18388_p4 = {{ret_V_39_fu_18382_p2[25:10]}};

assign trunc_ln818_26_fu_18404_p4 = {{ret_V_40_fu_18398_p2[25:10]}};

assign trunc_ln818_27_fu_18420_p4 = {{ret_V_41_fu_18414_p2[25:10]}};

assign trunc_ln818_28_fu_18436_p4 = {{ret_V_42_fu_18430_p2[25:10]}};

assign trunc_ln818_29_fu_18452_p4 = {{ret_V_43_fu_18446_p2[25:10]}};

assign trunc_ln818_2_fu_18004_p4 = {{ret_V_14_fu_17998_p2[25:10]}};

assign trunc_ln818_30_fu_18468_p4 = {{ret_V_44_fu_18462_p2[25:10]}};

assign trunc_ln818_31_fu_18484_p4 = {{ret_V_45_fu_18478_p2[25:10]}};

assign trunc_ln818_32_fu_18500_p4 = {{ret_V_46_fu_18494_p2[25:10]}};

assign trunc_ln818_33_fu_18516_p4 = {{ret_V_47_fu_18510_p2[25:10]}};

assign trunc_ln818_34_fu_18532_p4 = {{ret_V_48_fu_18526_p2[25:10]}};

assign trunc_ln818_35_fu_18548_p4 = {{ret_V_49_fu_18542_p2[25:10]}};

assign trunc_ln818_36_fu_18564_p4 = {{ret_V_50_fu_18558_p2[25:10]}};

assign trunc_ln818_37_fu_18580_p4 = {{ret_V_51_fu_18574_p2[25:10]}};

assign trunc_ln818_38_fu_18596_p4 = {{ret_V_52_fu_18590_p2[25:10]}};

assign trunc_ln818_39_fu_18612_p4 = {{ret_V_53_fu_18606_p2[25:10]}};

assign trunc_ln818_3_fu_18020_p4 = {{ret_V_15_fu_18014_p2[25:10]}};

assign trunc_ln818_40_fu_18628_p4 = {{ret_V_54_fu_18622_p2[25:10]}};

assign trunc_ln818_41_fu_18644_p4 = {{ret_V_55_fu_18638_p2[25:10]}};

assign trunc_ln818_42_fu_18660_p4 = {{ret_V_56_fu_18654_p2[25:10]}};

assign trunc_ln818_43_fu_18676_p4 = {{ret_V_57_fu_18670_p2[25:10]}};

assign trunc_ln818_44_fu_18692_p4 = {{ret_V_58_fu_18686_p2[25:10]}};

assign trunc_ln818_45_fu_18708_p4 = {{ret_V_59_fu_18702_p2[25:10]}};

assign trunc_ln818_46_fu_18724_p4 = {{ret_V_60_fu_18718_p2[25:10]}};

assign trunc_ln818_47_fu_18740_p4 = {{ret_V_61_fu_18734_p2[25:10]}};

assign trunc_ln818_48_fu_18756_p4 = {{ret_V_62_fu_18750_p2[25:10]}};

assign trunc_ln818_49_fu_18772_p4 = {{ret_V_63_fu_18766_p2[25:10]}};

assign trunc_ln818_4_fu_18036_p4 = {{ret_V_16_fu_18030_p2[25:10]}};

assign trunc_ln818_50_fu_18788_p4 = {{ret_V_64_fu_18782_p2[25:10]}};

assign trunc_ln818_51_fu_18804_p4 = {{ret_V_65_fu_18798_p2[25:10]}};

assign trunc_ln818_52_fu_18820_p4 = {{ret_V_66_fu_18814_p2[25:10]}};

assign trunc_ln818_54_fu_18836_p4 = {{ret_V_68_fu_18830_p2[25:10]}};

assign trunc_ln818_55_fu_18852_p4 = {{ret_V_69_fu_18846_p2[25:10]}};

assign trunc_ln818_56_fu_18868_p4 = {{ret_V_70_fu_18862_p2[25:10]}};

assign trunc_ln818_57_fu_18884_p4 = {{ret_V_71_fu_18878_p2[25:10]}};

assign trunc_ln818_58_fu_18900_p4 = {{ret_V_72_fu_18894_p2[25:10]}};

assign trunc_ln818_59_fu_18916_p4 = {{ret_V_73_fu_18910_p2[25:10]}};

assign trunc_ln818_60_fu_18932_p4 = {{ret_V_74_fu_18926_p2[25:10]}};

assign trunc_ln818_61_fu_18948_p4 = {{ret_V_75_fu_18942_p2[25:10]}};

assign trunc_ln818_62_fu_18964_p4 = {{ret_V_76_fu_18958_p2[25:10]}};

assign trunc_ln818_6_fu_18052_p4 = {{ret_V_18_fu_18046_p2[25:10]}};

assign trunc_ln818_7_fu_18068_p4 = {{ret_V_19_fu_18062_p2[25:10]}};

assign trunc_ln818_8_fu_18084_p4 = {{ret_V_20_fu_18078_p2[25:10]}};

assign trunc_ln818_9_fu_18100_p4 = {{ret_V_21_fu_18094_p2[25:10]}};

assign trunc_ln818_s_fu_18116_p4 = {{ret_V_22_fu_18110_p2[25:10]}};

assign trunc_ln_fu_17988_p4 = {{ret_V_fu_17982_p2[25:10]}};

endmodule //kernel_wrapper_normalize_array_ap_fixed_64u_array_ap_fixed_16_6_5_3_0_64u_config21_s
