// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module kernel_wrapper_softmax_stable_array_array_ap_fixed_16_6_5_3_0_10u_softmax_config25_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        layer23_out_dout,
        layer23_out_num_data_valid,
        layer23_out_fifo_cap,
        layer23_out_empty_n,
        layer23_out_read,
        output_r_din,
        output_r_num_data_valid,
        output_r_fifo_cap,
        output_r_full_n,
        output_r_write
);

parameter    ap_ST_fsm_state1 = 11'd1;
parameter    ap_ST_fsm_state2 = 11'd2;
parameter    ap_ST_fsm_state3 = 11'd4;
parameter    ap_ST_fsm_state4 = 11'd8;
parameter    ap_ST_fsm_state5 = 11'd16;
parameter    ap_ST_fsm_state6 = 11'd32;
parameter    ap_ST_fsm_state7 = 11'd64;
parameter    ap_ST_fsm_state8 = 11'd128;
parameter    ap_ST_fsm_state9 = 11'd256;
parameter    ap_ST_fsm_state10 = 11'd512;
parameter    ap_ST_fsm_state11 = 11'd1024;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [159:0] layer23_out_dout;
input  [1:0] layer23_out_num_data_valid;
input  [1:0] layer23_out_fifo_cap;
input   layer23_out_empty_n;
output   layer23_out_read;
output  [159:0] output_r_din;
input  [1:0] output_r_num_data_valid;
input  [1:0] output_r_fifo_cap;
input   output_r_full_n;
output   output_r_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg layer23_out_read;
reg output_r_write;

(* fsm_encoding = "none" *) reg   [10:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [9:0] exp_table_address0;
reg    exp_table_ce0;
wire   [16:0] exp_table_q0;
reg   [9:0] exp_table_address1;
reg    exp_table_ce1;
wire   [16:0] exp_table_q1;
wire   [9:0] exp_table_address2;
reg    exp_table_ce2;
wire   [16:0] exp_table_q2;
wire   [9:0] exp_table_address3;
reg    exp_table_ce3;
wire   [16:0] exp_table_q3;
wire   [9:0] exp_table_address4;
reg    exp_table_ce4;
wire   [16:0] exp_table_q4;
wire   [9:0] exp_table_address5;
reg    exp_table_ce5;
wire   [16:0] exp_table_q5;
wire   [9:0] exp_table_address6;
reg    exp_table_ce6;
wire   [16:0] exp_table_q6;
wire   [9:0] exp_table_address7;
reg    exp_table_ce7;
wire   [16:0] exp_table_q7;
wire   [9:0] invert_table_address0;
reg    invert_table_ce0;
wire   [17:0] invert_table_q0;
reg    layer23_out_blk_n;
reg    output_r_blk_n;
wire    ap_CS_fsm_state11;
wire  signed [15:0] data_array_V_fu_642_p1;
reg  signed [15:0] data_array_V_reg_2382;
reg  signed [15:0] data_array_V_8_reg_2388;
reg  signed [15:0] data_array_V_9_reg_2395;
wire  signed [15:0] data_array_V_1_fu_666_p4;
reg  signed [15:0] data_array_V_1_reg_2402;
wire  signed [15:0] data_array_V_2_fu_676_p4;
reg  signed [15:0] data_array_V_2_reg_2408;
wire  signed [15:0] data_array_V_3_fu_686_p4;
reg  signed [15:0] data_array_V_3_reg_2414;
wire  signed [15:0] data_array_V_4_fu_696_p4;
reg  signed [15:0] data_array_V_4_reg_2420;
wire  signed [15:0] data_array_V_5_fu_706_p4;
reg  signed [15:0] data_array_V_5_reg_2426;
wire  signed [15:0] data_array_V_6_fu_716_p4;
reg  signed [15:0] data_array_V_6_reg_2432;
wire  signed [15:0] data_array_V_7_fu_726_p4;
reg  signed [15:0] data_array_V_7_reg_2438;
wire   [0:0] icmp_ln1651_fu_736_p2;
reg   [0:0] icmp_ln1651_reg_2444;
wire   [0:0] icmp_ln1651_1_fu_742_p2;
reg   [0:0] icmp_ln1651_1_reg_2449;
wire   [0:0] icmp_ln1651_3_fu_748_p2;
reg   [0:0] icmp_ln1651_3_reg_2454;
wire   [0:0] icmp_ln1651_4_fu_754_p2;
reg   [0:0] icmp_ln1651_4_reg_2459;
wire   [15:0] select_ln65_6_fu_856_p3;
reg   [15:0] select_ln65_6_reg_2464;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln1651_7_fu_864_p2;
reg   [0:0] icmp_ln1651_7_reg_2470;
wire   [9:0] p_Result_s_fu_1349_p3;
reg   [9:0] p_Result_s_reg_2475;
wire    ap_CS_fsm_state3;
wire   [9:0] p_Result_21_fu_1375_p3;
reg   [9:0] p_Result_21_reg_2480;
wire   [9:0] p_Result_22_fu_1401_p3;
reg   [9:0] p_Result_22_reg_2485;
wire   [9:0] p_Result_23_fu_1427_p3;
reg   [9:0] p_Result_23_reg_2490;
wire   [9:0] p_Result_24_fu_1453_p3;
reg   [9:0] p_Result_24_reg_2495;
wire   [9:0] p_Result_25_fu_1479_p3;
reg   [9:0] p_Result_25_reg_2500;
wire   [9:0] p_Result_26_fu_1505_p3;
reg   [9:0] p_Result_26_reg_2505;
wire   [9:0] p_Result_27_fu_1531_p3;
reg   [9:0] p_Result_27_reg_2510;
wire   [9:0] p_Result_28_fu_1557_p3;
reg   [9:0] p_Result_28_reg_2515;
wire   [9:0] p_Result_29_fu_1583_p3;
reg   [9:0] p_Result_29_reg_2520;
wire    ap_CS_fsm_state4;
reg   [16:0] exp_res_V_reg_2565;
wire    ap_CS_fsm_state5;
reg   [16:0] exp_res_V_10_reg_2571;
reg   [16:0] exp_res_V_11_reg_2577;
reg   [16:0] exp_res_V_12_reg_2583;
reg   [16:0] exp_res_V_13_reg_2589;
reg   [16:0] exp_res_V_14_reg_2595;
reg   [16:0] exp_res_V_15_reg_2601;
reg   [16:0] exp_res_V_16_reg_2607;
reg   [16:0] exp_res_V_17_reg_2623;
wire    ap_CS_fsm_state6;
reg   [16:0] exp_res_V_18_reg_2630;
wire   [0:0] p_Result_66_fu_1733_p3;
reg   [0:0] p_Result_66_reg_2637;
wire   [17:0] p_Val2_13_fu_1741_p2;
reg   [17:0] p_Val2_13_reg_2643;
wire   [0:0] p_Result_67_fu_1747_p3;
reg   [0:0] p_Result_67_reg_2648;
wire   [17:0] select_ln350_fu_1767_p3;
reg   [17:0] select_ln350_reg_2654;
wire   [0:0] p_Result_70_fu_1877_p3;
reg   [0:0] p_Result_70_reg_2659;
wire   [17:0] p_Val2_17_fu_1885_p2;
reg   [17:0] p_Val2_17_reg_2665;
wire   [0:0] p_Result_71_fu_1891_p3;
reg   [0:0] p_Result_71_reg_2670;
wire   [17:0] select_ln350_1_fu_1911_p3;
reg   [17:0] select_ln350_1_reg_2676;
reg   [0:0] p_Result_75_reg_2681;
wire    ap_CS_fsm_state7;
reg   [0:0] p_Result_76_reg_2688;
reg   [9:0] tmp_s_reg_2695;
wire    ap_CS_fsm_state8;
reg   [17:0] inv_exp_sum_V_reg_2706;
wire    ap_CS_fsm_state9;
reg   [15:0] out_pack_data_reg_2711;
wire    ap_CS_fsm_state10;
reg   [15:0] trunc_ln1_reg_2716;
reg   [15:0] trunc_ln818_1_reg_2721;
reg   [15:0] tmp_10_reg_2726;
reg   [15:0] tmp_11_reg_2731;
reg   [15:0] tmp_12_reg_2736;
reg   [15:0] tmp_13_reg_2741;
reg   [15:0] tmp_14_reg_2746;
reg   [15:0] tmp_15_reg_2751;
reg   [15:0] tmp_16_reg_2756;
wire   [63:0] zext_ln225_fu_1591_p1;
wire   [63:0] zext_ln225_1_fu_1595_p1;
wire   [63:0] zext_ln225_2_fu_1599_p1;
wire   [63:0] zext_ln225_3_fu_1603_p1;
wire   [63:0] zext_ln225_4_fu_1607_p1;
wire   [63:0] zext_ln225_5_fu_1611_p1;
wire   [63:0] zext_ln225_6_fu_1615_p1;
wire   [63:0] zext_ln225_7_fu_1619_p1;
wire   [63:0] zext_ln225_8_fu_1623_p1;
wire   [63:0] zext_ln225_9_fu_1627_p1;
wire   [63:0] zext_ln235_fu_2209_p1;
reg    ap_block_state1;
wire  signed [17:0] mul_ln1270_fu_271_p0;
wire  signed [25:0] sext_ln1273_fu_2214_p1;
wire   [16:0] mul_ln1270_fu_271_p1;
wire  signed [17:0] mul_ln1270_2_fu_272_p0;
wire   [16:0] mul_ln1270_2_fu_272_p1;
wire  signed [17:0] mul_ln1270_4_fu_273_p0;
wire   [16:0] mul_ln1270_4_fu_273_p1;
wire  signed [17:0] mul_ln1270_6_fu_274_p0;
wire   [16:0] mul_ln1270_6_fu_274_p1;
wire  signed [17:0] mul_ln1270_3_fu_275_p0;
wire   [16:0] mul_ln1270_3_fu_275_p1;
wire  signed [17:0] mul_ln1270_7_fu_276_p0;
wire   [16:0] mul_ln1270_7_fu_276_p1;
wire  signed [17:0] mul_ln1270_5_fu_277_p0;
wire   [16:0] mul_ln1270_5_fu_277_p1;
wire  signed [17:0] mul_ln1270_1_fu_278_p0;
wire   [16:0] mul_ln1270_1_fu_278_p1;
wire  signed [17:0] mul_ln1270_8_fu_279_p0;
wire   [16:0] mul_ln1270_8_fu_279_p1;
wire  signed [17:0] mul_ln1270_9_fu_280_p0;
wire   [16:0] mul_ln1270_9_fu_280_p1;
wire   [0:0] xor_ln1651_fu_760_p2;
wire   [0:0] xor_ln1651_1_fu_771_p2;
wire   [15:0] select_ln65_fu_765_p3;
wire   [15:0] select_ln65_1_fu_776_p3;
wire   [0:0] icmp_ln1651_2_fu_782_p2;
wire   [0:0] xor_ln1651_2_fu_788_p2;
wire   [0:0] xor_ln1651_3_fu_802_p2;
wire   [0:0] xor_ln1651_4_fu_813_p2;
wire   [15:0] select_ln65_3_fu_807_p3;
wire   [15:0] select_ln65_4_fu_818_p3;
wire   [0:0] icmp_ln1651_5_fu_824_p2;
wire   [0:0] xor_ln1651_5_fu_830_p2;
wire   [15:0] select_ln65_2_fu_794_p3;
wire   [15:0] select_ln65_5_fu_836_p3;
wire   [0:0] icmp_ln1651_6_fu_844_p2;
wire   [0:0] xor_ln1651_6_fu_850_p2;
wire   [0:0] xor_ln1651_7_fu_868_p2;
wire   [15:0] select_ln65_7_fu_873_p3;
wire   [0:0] icmp_ln1651_8_fu_879_p2;
wire   [0:0] xor_ln1651_8_fu_884_p2;
wire   [15:0] x_max_V_fu_890_p3;
wire  signed [16:0] sext_ln1348_fu_897_p1;
wire  signed [16:0] sext_ln1348_1_fu_900_p1;
wire   [16:0] ret_V_fu_904_p2;
wire   [0:0] p_Result_44_fu_910_p3;
wire   [0:0] p_Result_45_fu_918_p3;
wire   [0:0] xor_ln895_fu_926_p2;
wire  signed [16:0] sext_ln1348_2_fu_944_p1;
wire   [16:0] ret_V_1_fu_947_p2;
wire   [0:0] p_Result_46_fu_953_p3;
wire   [0:0] p_Result_47_fu_961_p3;
wire   [0:0] xor_ln895_1_fu_969_p2;
wire  signed [16:0] sext_ln1348_3_fu_987_p1;
wire   [16:0] ret_V_2_fu_990_p2;
wire   [0:0] p_Result_48_fu_996_p3;
wire   [0:0] p_Result_49_fu_1004_p3;
wire   [0:0] xor_ln895_2_fu_1012_p2;
wire  signed [16:0] sext_ln1348_4_fu_1030_p1;
wire   [16:0] ret_V_3_fu_1033_p2;
wire   [0:0] p_Result_50_fu_1039_p3;
wire   [0:0] p_Result_51_fu_1047_p3;
wire   [0:0] xor_ln895_3_fu_1055_p2;
wire  signed [16:0] sext_ln1348_5_fu_1073_p1;
wire   [16:0] ret_V_4_fu_1076_p2;
wire   [0:0] p_Result_52_fu_1082_p3;
wire   [0:0] p_Result_53_fu_1090_p3;
wire   [0:0] xor_ln895_4_fu_1098_p2;
wire  signed [16:0] sext_ln1348_6_fu_1116_p1;
wire   [16:0] ret_V_5_fu_1119_p2;
wire   [0:0] p_Result_54_fu_1125_p3;
wire   [0:0] p_Result_55_fu_1133_p3;
wire   [0:0] xor_ln895_5_fu_1141_p2;
wire  signed [16:0] sext_ln1348_7_fu_1159_p1;
wire   [16:0] ret_V_6_fu_1162_p2;
wire   [0:0] p_Result_56_fu_1168_p3;
wire   [0:0] p_Result_57_fu_1176_p3;
wire   [0:0] xor_ln895_6_fu_1184_p2;
wire  signed [16:0] sext_ln1348_8_fu_1202_p1;
wire   [16:0] ret_V_7_fu_1205_p2;
wire   [0:0] p_Result_58_fu_1211_p3;
wire   [0:0] p_Result_59_fu_1219_p3;
wire   [0:0] xor_ln895_7_fu_1227_p2;
wire  signed [16:0] sext_ln1348_9_fu_1245_p1;
wire   [16:0] ret_V_8_fu_1248_p2;
wire   [0:0] p_Result_60_fu_1254_p3;
wire   [0:0] p_Result_61_fu_1262_p3;
wire   [0:0] xor_ln895_8_fu_1270_p2;
wire  signed [16:0] sext_ln1348_10_fu_1288_p1;
wire   [16:0] ret_V_9_fu_1291_p2;
wire   [0:0] p_Result_62_fu_1297_p3;
wire   [0:0] p_Result_63_fu_1305_p3;
wire   [0:0] xor_ln895_9_fu_1313_p2;
wire   [0:0] overflow_fu_932_p2;
wire   [0:0] xor_ln302_fu_938_p2;
wire   [9:0] select_ln346_fu_1331_p3;
wire   [9:0] tmp_fu_1339_p4;
wire   [0:0] overflow_1_fu_975_p2;
wire   [0:0] xor_ln302_1_fu_981_p2;
wire   [9:0] select_ln346_1_fu_1357_p3;
wire   [9:0] tmp_1_fu_1365_p4;
wire   [0:0] overflow_2_fu_1018_p2;
wire   [0:0] xor_ln302_2_fu_1024_p2;
wire   [9:0] select_ln346_2_fu_1383_p3;
wire   [9:0] tmp_2_fu_1391_p4;
wire   [0:0] overflow_3_fu_1061_p2;
wire   [0:0] xor_ln302_3_fu_1067_p2;
wire   [9:0] select_ln346_3_fu_1409_p3;
wire   [9:0] tmp_3_fu_1417_p4;
wire   [0:0] overflow_4_fu_1104_p2;
wire   [0:0] xor_ln302_4_fu_1110_p2;
wire   [9:0] select_ln346_4_fu_1435_p3;
wire   [9:0] tmp_4_fu_1443_p4;
wire   [0:0] overflow_5_fu_1147_p2;
wire   [0:0] xor_ln302_5_fu_1153_p2;
wire   [9:0] select_ln346_5_fu_1461_p3;
wire   [9:0] tmp_5_fu_1469_p4;
wire   [0:0] overflow_6_fu_1190_p2;
wire   [0:0] xor_ln302_6_fu_1196_p2;
wire   [9:0] select_ln346_6_fu_1487_p3;
wire   [9:0] tmp_6_fu_1495_p4;
wire   [0:0] overflow_7_fu_1233_p2;
wire   [0:0] xor_ln302_7_fu_1239_p2;
wire   [9:0] select_ln346_7_fu_1513_p3;
wire   [9:0] tmp_7_fu_1521_p4;
wire   [0:0] overflow_8_fu_1276_p2;
wire   [0:0] xor_ln302_8_fu_1282_p2;
wire   [9:0] select_ln346_8_fu_1539_p3;
wire   [9:0] tmp_8_fu_1547_p4;
wire   [0:0] overflow_9_fu_1319_p2;
wire   [0:0] xor_ln302_9_fu_1325_p2;
wire   [9:0] select_ln346_9_fu_1565_p3;
wire   [9:0] tmp_9_fu_1573_p4;
wire   [17:0] zext_ln43_1_fu_1634_p1;
wire   [17:0] zext_ln43_fu_1631_p1;
wire   [17:0] p_Val2_10_fu_1637_p2;
wire   [0:0] tmp_38_fu_1651_p3;
wire   [0:0] p_Result_64_fu_1643_p3;
wire   [17:0] select_ln346_11_fu_1659_p3;
wire   [17:0] zext_ln43_3_fu_1678_p1;
wire   [17:0] zext_ln43_2_fu_1675_p1;
wire   [17:0] p_Val2_11_fu_1681_p2;
wire   [0:0] tmp_40_fu_1695_p3;
wire   [0:0] p_Result_65_fu_1687_p3;
wire   [17:0] select_ln346_12_fu_1703_p3;
wire  signed [17:0] lhs_2_fu_1667_p3;
wire  signed [17:0] rhs_2_fu_1711_p3;
wire  signed [18:0] sext_ln813_4_fu_1723_p1;
wire  signed [18:0] sext_ln813_3_fu_1719_p1;
wire   [18:0] ret_V_10_fu_1727_p2;
wire   [0:0] xor_ln896_1_fu_1755_p2;
wire   [0:0] underflow_1_fu_1761_p2;
wire   [17:0] zext_ln43_5_fu_1778_p1;
wire   [17:0] zext_ln43_4_fu_1775_p1;
wire   [17:0] p_Val2_14_fu_1781_p2;
wire   [0:0] tmp_44_fu_1795_p3;
wire   [0:0] p_Result_68_fu_1787_p3;
wire   [17:0] select_ln346_13_fu_1803_p3;
wire   [17:0] zext_ln43_7_fu_1822_p1;
wire   [17:0] zext_ln43_6_fu_1819_p1;
wire   [17:0] p_Val2_15_fu_1825_p2;
wire   [0:0] tmp_46_fu_1839_p3;
wire   [0:0] p_Result_69_fu_1831_p3;
wire   [17:0] select_ln346_14_fu_1847_p3;
wire  signed [17:0] lhs_5_fu_1811_p3;
wire  signed [17:0] rhs_5_fu_1855_p3;
wire  signed [18:0] sext_ln813_6_fu_1867_p1;
wire  signed [18:0] sext_ln813_5_fu_1863_p1;
wire   [18:0] ret_V_11_fu_1871_p2;
wire   [0:0] xor_ln896_2_fu_1899_p2;
wire   [0:0] underflow_2_fu_1905_p2;
wire   [0:0] xor_ln895_12_fu_1925_p2;
wire   [0:0] xor_ln302_13_fu_1935_p2;
wire   [0:0] overflow_12_fu_1930_p2;
wire   [0:0] xor_ln302_14_fu_1939_p2;
wire   [0:0] or_ln302_1_fu_1945_p2;
wire   [17:0] select_ln302_fu_1951_p3;
wire   [0:0] xor_ln895_13_fu_1965_p2;
wire   [0:0] xor_ln302_15_fu_1975_p2;
wire   [0:0] overflow_15_fu_1970_p2;
wire   [0:0] xor_ln302_16_fu_1979_p2;
wire   [0:0] or_ln302_2_fu_1985_p2;
wire   [17:0] select_ln302_5_fu_1991_p3;
wire  signed [17:0] lhs_6_fu_1958_p3;
wire  signed [17:0] rhs_6_fu_1998_p3;
wire  signed [18:0] sext_ln813_fu_2005_p1;
wire  signed [18:0] sext_ln813_1_fu_2009_p1;
wire   [18:0] ret_V_12_fu_2013_p2;
wire   [17:0] p_Val2_19_fu_2027_p2;
wire   [0:0] p_Result_72_fu_2019_p3;
wire   [0:0] p_Result_73_fu_2033_p3;
wire   [0:0] xor_ln895_10_fu_2041_p2;
wire   [0:0] overflow_16_fu_2047_p2;
wire   [0:0] xor_ln302_10_fu_2053_p2;
wire   [17:0] select_ln346_10_fu_2059_p3;
wire   [17:0] exp_res_V_9_cast40_fu_1922_p1;
wire   [17:0] exp_res_V_8_cast39_fu_1919_p1;
wire   [17:0] p_Val2_20_fu_2075_p2;
wire   [0:0] p_Result_74_fu_2085_p3;
wire   [16:0] add_ln856_fu_2081_p2;
wire   [16:0] rhs_7_fu_2093_p3;
wire  signed [17:0] lhs_7_fu_2067_p3;
wire  signed [18:0] sext_ln813_2_fu_2105_p1;
wire   [18:0] zext_ln813_1_fu_2109_p1;
wire   [18:0] ret_V_13_fu_2113_p2;
wire   [17:0] zext_ln813_fu_2101_p1;
wire   [17:0] p_Val2_22_fu_2127_p2;
wire   [0:0] xor_ln895_11_fu_2151_p2;
wire   [0:0] xor_ln896_fu_2161_p2;
wire   [0:0] xor_ln302_11_fu_2171_p2;
wire   [0:0] overflow_18_fu_2156_p2;
wire   [0:0] xor_ln302_12_fu_2175_p2;
wire   [0:0] underflow_fu_2166_p2;
wire   [0:0] or_ln302_fu_2181_p2;
wire   [9:0] select_ln302_8_fu_2187_p3;
wire   [9:0] select_ln350_2_fu_2194_p3;
wire   [9:0] p_Result_43_fu_2201_p3;
wire   [25:0] mul_ln1270_fu_271_p2;
wire   [25:0] mul_ln1270_8_fu_279_p2;
wire   [25:0] mul_ln1270_9_fu_280_p2;
wire   [25:0] mul_ln1270_7_fu_276_p2;
wire   [25:0] mul_ln1270_6_fu_274_p2;
wire   [25:0] mul_ln1270_5_fu_277_p2;
wire   [25:0] mul_ln1270_4_fu_273_p2;
wire   [25:0] mul_ln1270_3_fu_275_p2;
wire   [25:0] mul_ln1270_2_fu_272_p2;
wire   [25:0] mul_ln1270_1_fu_278_p2;
reg   [10:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
reg    ap_ST_fsm_state11_blk;
wire   [25:0] mul_ln1270_1_fu_278_p10;
wire   [25:0] mul_ln1270_2_fu_272_p10;
wire   [25:0] mul_ln1270_3_fu_275_p10;
wire   [25:0] mul_ln1270_4_fu_273_p10;
wire   [25:0] mul_ln1270_5_fu_277_p10;
wire   [25:0] mul_ln1270_6_fu_274_p10;
wire   [25:0] mul_ln1270_7_fu_276_p10;
wire   [25:0] mul_ln1270_8_fu_279_p10;
wire   [25:0] mul_ln1270_9_fu_280_p10;
wire   [25:0] mul_ln1270_fu_271_p10;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 11'd1;
end

kernel_wrapper_softmax_stable_array_array_ap_fixed_16_6_5_3_0_10u_softmax_config25_s_exp_tabcdu #(
    .DataWidth( 17 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
exp_table_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(exp_table_address0),
    .ce0(exp_table_ce0),
    .q0(exp_table_q0),
    .address1(exp_table_address1),
    .ce1(exp_table_ce1),
    .q1(exp_table_q1),
    .address2(exp_table_address2),
    .ce2(exp_table_ce2),
    .q2(exp_table_q2),
    .address3(exp_table_address3),
    .ce3(exp_table_ce3),
    .q3(exp_table_q3),
    .address4(exp_table_address4),
    .ce4(exp_table_ce4),
    .q4(exp_table_q4),
    .address5(exp_table_address5),
    .ce5(exp_table_ce5),
    .q5(exp_table_q5),
    .address6(exp_table_address6),
    .ce6(exp_table_ce6),
    .q6(exp_table_q6),
    .address7(exp_table_address7),
    .ce7(exp_table_ce7),
    .q7(exp_table_q7)
);

kernel_wrapper_softmax_stable_array_array_ap_fixed_16_6_5_3_0_10u_softmax_config25_s_invert_ceu #(
    .DataWidth( 18 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
invert_table_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(invert_table_address0),
    .ce0(invert_table_ce0),
    .q0(invert_table_q0)
);

kernel_wrapper_mul_18s_17ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 26 ))
mul_18s_17ns_26_1_1_U1771(
    .din0(mul_ln1270_fu_271_p0),
    .din1(mul_ln1270_fu_271_p1),
    .dout(mul_ln1270_fu_271_p2)
);

kernel_wrapper_mul_18s_17ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 26 ))
mul_18s_17ns_26_1_1_U1772(
    .din0(mul_ln1270_2_fu_272_p0),
    .din1(mul_ln1270_2_fu_272_p1),
    .dout(mul_ln1270_2_fu_272_p2)
);

kernel_wrapper_mul_18s_17ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 26 ))
mul_18s_17ns_26_1_1_U1773(
    .din0(mul_ln1270_4_fu_273_p0),
    .din1(mul_ln1270_4_fu_273_p1),
    .dout(mul_ln1270_4_fu_273_p2)
);

kernel_wrapper_mul_18s_17ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 26 ))
mul_18s_17ns_26_1_1_U1774(
    .din0(mul_ln1270_6_fu_274_p0),
    .din1(mul_ln1270_6_fu_274_p1),
    .dout(mul_ln1270_6_fu_274_p2)
);

kernel_wrapper_mul_18s_17ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 26 ))
mul_18s_17ns_26_1_1_U1775(
    .din0(mul_ln1270_3_fu_275_p0),
    .din1(mul_ln1270_3_fu_275_p1),
    .dout(mul_ln1270_3_fu_275_p2)
);

kernel_wrapper_mul_18s_17ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 26 ))
mul_18s_17ns_26_1_1_U1776(
    .din0(mul_ln1270_7_fu_276_p0),
    .din1(mul_ln1270_7_fu_276_p1),
    .dout(mul_ln1270_7_fu_276_p2)
);

kernel_wrapper_mul_18s_17ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 26 ))
mul_18s_17ns_26_1_1_U1777(
    .din0(mul_ln1270_5_fu_277_p0),
    .din1(mul_ln1270_5_fu_277_p1),
    .dout(mul_ln1270_5_fu_277_p2)
);

kernel_wrapper_mul_18s_17ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 26 ))
mul_18s_17ns_26_1_1_U1778(
    .din0(mul_ln1270_1_fu_278_p0),
    .din1(mul_ln1270_1_fu_278_p1),
    .dout(mul_ln1270_1_fu_278_p2)
);

kernel_wrapper_mul_18s_17ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 26 ))
mul_18s_17ns_26_1_1_U1779(
    .din0(mul_ln1270_8_fu_279_p0),
    .din1(mul_ln1270_8_fu_279_p1),
    .dout(mul_ln1270_8_fu_279_p2)
);

kernel_wrapper_mul_18s_17ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 26 ))
mul_18s_17ns_26_1_1_U1780(
    .din0(mul_ln1270_9_fu_280_p0),
    .din1(mul_ln1270_9_fu_280_p1),
    .dout(mul_ln1270_9_fu_280_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        data_array_V_1_reg_2402 <= {{layer23_out_dout[31:16]}};
        data_array_V_2_reg_2408 <= {{layer23_out_dout[47:32]}};
        data_array_V_3_reg_2414 <= {{layer23_out_dout[63:48]}};
        data_array_V_4_reg_2420 <= {{layer23_out_dout[79:64]}};
        data_array_V_5_reg_2426 <= {{layer23_out_dout[95:80]}};
        data_array_V_6_reg_2432 <= {{layer23_out_dout[111:96]}};
        data_array_V_7_reg_2438 <= {{layer23_out_dout[127:112]}};
        data_array_V_8_reg_2388 <= {{layer23_out_dout[143:128]}};
        data_array_V_9_reg_2395 <= {{layer23_out_dout[159:144]}};
        data_array_V_reg_2382 <= data_array_V_fu_642_p1;
        icmp_ln1651_1_reg_2449 <= icmp_ln1651_1_fu_742_p2;
        icmp_ln1651_3_reg_2454 <= icmp_ln1651_3_fu_748_p2;
        icmp_ln1651_4_reg_2459 <= icmp_ln1651_4_fu_754_p2;
        icmp_ln1651_reg_2444 <= icmp_ln1651_fu_736_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        exp_res_V_10_reg_2571 <= exp_table_q6;
        exp_res_V_11_reg_2577 <= exp_table_q5;
        exp_res_V_12_reg_2583 <= exp_table_q4;
        exp_res_V_13_reg_2589 <= exp_table_q3;
        exp_res_V_14_reg_2595 <= exp_table_q2;
        exp_res_V_15_reg_2601 <= exp_table_q1;
        exp_res_V_16_reg_2607 <= exp_table_q0;
        exp_res_V_reg_2565 <= exp_table_q7;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        exp_res_V_17_reg_2623 <= exp_table_q1;
        exp_res_V_18_reg_2630 <= exp_table_q0;
        p_Result_66_reg_2637 <= ret_V_10_fu_1727_p2[32'd18];
        p_Result_67_reg_2648 <= p_Val2_13_fu_1741_p2[32'd17];
        p_Result_70_reg_2659 <= ret_V_11_fu_1871_p2[32'd18];
        p_Result_71_reg_2670 <= p_Val2_17_fu_1885_p2[32'd17];
        p_Val2_13_reg_2643 <= p_Val2_13_fu_1741_p2;
        p_Val2_17_reg_2665 <= p_Val2_17_fu_1885_p2;
        select_ln350_1_reg_2676 <= select_ln350_1_fu_1911_p3;
        select_ln350_reg_2654 <= select_ln350_fu_1767_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        icmp_ln1651_7_reg_2470 <= icmp_ln1651_7_fu_864_p2;
        select_ln65_6_reg_2464 <= select_ln65_6_fu_856_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        inv_exp_sum_V_reg_2706 <= invert_table_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        out_pack_data_reg_2711 <= {{mul_ln1270_fu_271_p2[25:10]}};
        tmp_10_reg_2726 <= {{mul_ln1270_7_fu_276_p2[25:10]}};
        tmp_11_reg_2731 <= {{mul_ln1270_6_fu_274_p2[25:10]}};
        tmp_12_reg_2736 <= {{mul_ln1270_5_fu_277_p2[25:10]}};
        tmp_13_reg_2741 <= {{mul_ln1270_4_fu_273_p2[25:10]}};
        tmp_14_reg_2746 <= {{mul_ln1270_3_fu_275_p2[25:10]}};
        tmp_15_reg_2751 <= {{mul_ln1270_2_fu_272_p2[25:10]}};
        tmp_16_reg_2756 <= {{mul_ln1270_1_fu_278_p2[25:10]}};
        trunc_ln1_reg_2716 <= {{mul_ln1270_8_fu_279_p2[25:10]}};
        trunc_ln818_1_reg_2721 <= {{mul_ln1270_9_fu_280_p2[25:10]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        p_Result_21_reg_2480 <= p_Result_21_fu_1375_p3;
        p_Result_22_reg_2485 <= p_Result_22_fu_1401_p3;
        p_Result_23_reg_2490 <= p_Result_23_fu_1427_p3;
        p_Result_24_reg_2495 <= p_Result_24_fu_1453_p3;
        p_Result_25_reg_2500 <= p_Result_25_fu_1479_p3;
        p_Result_26_reg_2505 <= p_Result_26_fu_1505_p3;
        p_Result_27_reg_2510 <= p_Result_27_fu_1531_p3;
        p_Result_28_reg_2515 <= p_Result_28_fu_1557_p3;
        p_Result_29_reg_2520 <= p_Result_29_fu_1583_p3;
        p_Result_s_reg_2475 <= p_Result_s_fu_1349_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        p_Result_75_reg_2681 <= ret_V_13_fu_2113_p2[32'd18];
        p_Result_76_reg_2688 <= p_Val2_22_fu_2127_p2[32'd17];
        tmp_s_reg_2695 <= {{p_Val2_22_fu_2127_p2[17:8]}};
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

always @ (*) begin
    if ((output_r_full_n == 1'b0)) begin
        ap_ST_fsm_state11_blk = 1'b1;
    end else begin
        ap_ST_fsm_state11_blk = 1'b0;
    end
end

always @ (*) begin
    if (((layer23_out_empty_n == 1'b0) | (ap_start == 1'b0))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if ((((output_r_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state11)) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((output_r_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        exp_table_address0 = zext_ln225_9_fu_1627_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        exp_table_address0 = zext_ln225_7_fu_1619_p1;
    end else begin
        exp_table_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        exp_table_address1 = zext_ln225_8_fu_1623_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        exp_table_address1 = zext_ln225_6_fu_1615_p1;
    end else begin
        exp_table_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4))) begin
        exp_table_ce0 = 1'b1;
    end else begin
        exp_table_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4))) begin
        exp_table_ce1 = 1'b1;
    end else begin
        exp_table_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        exp_table_ce2 = 1'b1;
    end else begin
        exp_table_ce2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        exp_table_ce3 = 1'b1;
    end else begin
        exp_table_ce3 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        exp_table_ce4 = 1'b1;
    end else begin
        exp_table_ce4 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        exp_table_ce5 = 1'b1;
    end else begin
        exp_table_ce5 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        exp_table_ce6 = 1'b1;
    end else begin
        exp_table_ce6 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        exp_table_ce7 = 1'b1;
    end else begin
        exp_table_ce7 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        invert_table_ce0 = 1'b1;
    end else begin
        invert_table_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        layer23_out_blk_n = layer23_out_empty_n;
    end else begin
        layer23_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((layer23_out_empty_n == 1'b0) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        layer23_out_read = 1'b1;
    end else begin
        layer23_out_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        output_r_blk_n = output_r_full_n;
    end else begin
        output_r_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((output_r_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
        output_r_write = 1'b1;
    end else begin
        output_r_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((layer23_out_empty_n == 1'b0) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            if (((output_r_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln856_fu_2081_p2 = (exp_res_V_18_reg_2630 + exp_res_V_17_reg_2623);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state1 = ((layer23_out_empty_n == 1'b0) | (ap_start == 1'b0));
end

assign data_array_V_1_fu_666_p4 = {{layer23_out_dout[31:16]}};

assign data_array_V_2_fu_676_p4 = {{layer23_out_dout[47:32]}};

assign data_array_V_3_fu_686_p4 = {{layer23_out_dout[63:48]}};

assign data_array_V_4_fu_696_p4 = {{layer23_out_dout[79:64]}};

assign data_array_V_5_fu_706_p4 = {{layer23_out_dout[95:80]}};

assign data_array_V_6_fu_716_p4 = {{layer23_out_dout[111:96]}};

assign data_array_V_7_fu_726_p4 = {{layer23_out_dout[127:112]}};

assign data_array_V_fu_642_p1 = layer23_out_dout[15:0];

assign exp_res_V_8_cast39_fu_1919_p1 = exp_res_V_17_reg_2623;

assign exp_res_V_9_cast40_fu_1922_p1 = exp_res_V_18_reg_2630;

assign exp_table_address2 = zext_ln225_5_fu_1611_p1;

assign exp_table_address3 = zext_ln225_4_fu_1607_p1;

assign exp_table_address4 = zext_ln225_3_fu_1603_p1;

assign exp_table_address5 = zext_ln225_2_fu_1599_p1;

assign exp_table_address6 = zext_ln225_1_fu_1595_p1;

assign exp_table_address7 = zext_ln225_fu_1591_p1;

assign icmp_ln1651_1_fu_742_p2 = (($signed(data_array_V_2_fu_676_p4) < $signed(data_array_V_3_fu_686_p4)) ? 1'b1 : 1'b0);

assign icmp_ln1651_2_fu_782_p2 = (($signed(select_ln65_fu_765_p3) < $signed(select_ln65_1_fu_776_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1651_3_fu_748_p2 = (($signed(data_array_V_4_fu_696_p4) < $signed(data_array_V_5_fu_706_p4)) ? 1'b1 : 1'b0);

assign icmp_ln1651_4_fu_754_p2 = (($signed(data_array_V_6_fu_716_p4) < $signed(data_array_V_7_fu_726_p4)) ? 1'b1 : 1'b0);

assign icmp_ln1651_5_fu_824_p2 = (($signed(select_ln65_3_fu_807_p3) < $signed(select_ln65_4_fu_818_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1651_6_fu_844_p2 = (($signed(select_ln65_2_fu_794_p3) < $signed(select_ln65_5_fu_836_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1651_7_fu_864_p2 = (($signed(data_array_V_8_reg_2388) < $signed(data_array_V_9_reg_2395)) ? 1'b1 : 1'b0);

assign icmp_ln1651_8_fu_879_p2 = (($signed(select_ln65_6_reg_2464) < $signed(select_ln65_7_fu_873_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1651_fu_736_p2 = (($signed(data_array_V_fu_642_p1) < $signed(data_array_V_1_fu_666_p4)) ? 1'b1 : 1'b0);

assign invert_table_address0 = zext_ln235_fu_2209_p1;

assign lhs_2_fu_1667_p3 = ((p_Result_64_fu_1643_p3[0:0] == 1'b1) ? select_ln346_11_fu_1659_p3 : p_Val2_10_fu_1637_p2);

assign lhs_5_fu_1811_p3 = ((p_Result_68_fu_1787_p3[0:0] == 1'b1) ? select_ln346_13_fu_1803_p3 : p_Val2_14_fu_1781_p2);

assign lhs_6_fu_1958_p3 = ((or_ln302_1_fu_1945_p2[0:0] == 1'b1) ? select_ln302_fu_1951_p3 : select_ln350_reg_2654);

assign lhs_7_fu_2067_p3 = ((xor_ln302_10_fu_2053_p2[0:0] == 1'b1) ? select_ln346_10_fu_2059_p3 : p_Val2_19_fu_2027_p2);

assign mul_ln1270_1_fu_278_p0 = sext_ln1273_fu_2214_p1;

assign mul_ln1270_1_fu_278_p1 = mul_ln1270_1_fu_278_p10;

assign mul_ln1270_1_fu_278_p10 = exp_res_V_10_reg_2571;

assign mul_ln1270_2_fu_272_p0 = sext_ln1273_fu_2214_p1;

assign mul_ln1270_2_fu_272_p1 = mul_ln1270_2_fu_272_p10;

assign mul_ln1270_2_fu_272_p10 = exp_res_V_11_reg_2577;

assign mul_ln1270_3_fu_275_p0 = sext_ln1273_fu_2214_p1;

assign mul_ln1270_3_fu_275_p1 = mul_ln1270_3_fu_275_p10;

assign mul_ln1270_3_fu_275_p10 = exp_res_V_12_reg_2583;

assign mul_ln1270_4_fu_273_p0 = sext_ln1273_fu_2214_p1;

assign mul_ln1270_4_fu_273_p1 = mul_ln1270_4_fu_273_p10;

assign mul_ln1270_4_fu_273_p10 = exp_res_V_13_reg_2589;

assign mul_ln1270_5_fu_277_p0 = sext_ln1273_fu_2214_p1;

assign mul_ln1270_5_fu_277_p1 = mul_ln1270_5_fu_277_p10;

assign mul_ln1270_5_fu_277_p10 = exp_res_V_14_reg_2595;

assign mul_ln1270_6_fu_274_p0 = sext_ln1273_fu_2214_p1;

assign mul_ln1270_6_fu_274_p1 = mul_ln1270_6_fu_274_p10;

assign mul_ln1270_6_fu_274_p10 = exp_res_V_15_reg_2601;

assign mul_ln1270_7_fu_276_p0 = sext_ln1273_fu_2214_p1;

assign mul_ln1270_7_fu_276_p1 = mul_ln1270_7_fu_276_p10;

assign mul_ln1270_7_fu_276_p10 = exp_res_V_16_reg_2607;

assign mul_ln1270_8_fu_279_p0 = sext_ln1273_fu_2214_p1;

assign mul_ln1270_8_fu_279_p1 = mul_ln1270_8_fu_279_p10;

assign mul_ln1270_8_fu_279_p10 = exp_res_V_17_reg_2623;

assign mul_ln1270_9_fu_280_p0 = sext_ln1273_fu_2214_p1;

assign mul_ln1270_9_fu_280_p1 = mul_ln1270_9_fu_280_p10;

assign mul_ln1270_9_fu_280_p10 = exp_res_V_18_reg_2630;

assign mul_ln1270_fu_271_p0 = sext_ln1273_fu_2214_p1;

assign mul_ln1270_fu_271_p1 = mul_ln1270_fu_271_p10;

assign mul_ln1270_fu_271_p10 = exp_res_V_reg_2565;

assign or_ln302_1_fu_1945_p2 = (xor_ln302_14_fu_1939_p2 | overflow_12_fu_1930_p2);

assign or_ln302_2_fu_1985_p2 = (xor_ln302_16_fu_1979_p2 | overflow_15_fu_1970_p2);

assign or_ln302_fu_2181_p2 = (xor_ln302_12_fu_2175_p2 | overflow_18_fu_2156_p2);

assign output_r_din = {{{{{{{{{{trunc_ln818_1_reg_2721}, {trunc_ln1_reg_2716}}, {tmp_10_reg_2726}}, {tmp_11_reg_2731}}, {tmp_12_reg_2736}}, {tmp_13_reg_2741}}, {tmp_14_reg_2746}}, {tmp_15_reg_2751}}, {tmp_16_reg_2756}}, {out_pack_data_reg_2711}};

assign overflow_12_fu_1930_p2 = (xor_ln895_12_fu_1925_p2 & p_Result_67_reg_2648);

assign overflow_15_fu_1970_p2 = (xor_ln895_13_fu_1965_p2 & p_Result_71_reg_2670);

assign overflow_16_fu_2047_p2 = (xor_ln895_10_fu_2041_p2 & p_Result_73_fu_2033_p3);

assign overflow_18_fu_2156_p2 = (xor_ln895_11_fu_2151_p2 & p_Result_76_reg_2688);

assign overflow_1_fu_975_p2 = (xor_ln895_1_fu_969_p2 & p_Result_47_fu_961_p3);

assign overflow_2_fu_1018_p2 = (xor_ln895_2_fu_1012_p2 & p_Result_49_fu_1004_p3);

assign overflow_3_fu_1061_p2 = (xor_ln895_3_fu_1055_p2 & p_Result_51_fu_1047_p3);

assign overflow_4_fu_1104_p2 = (xor_ln895_4_fu_1098_p2 & p_Result_53_fu_1090_p3);

assign overflow_5_fu_1147_p2 = (xor_ln895_5_fu_1141_p2 & p_Result_55_fu_1133_p3);

assign overflow_6_fu_1190_p2 = (xor_ln895_6_fu_1184_p2 & p_Result_57_fu_1176_p3);

assign overflow_7_fu_1233_p2 = (xor_ln895_7_fu_1227_p2 & p_Result_59_fu_1219_p3);

assign overflow_8_fu_1276_p2 = (xor_ln895_8_fu_1270_p2 & p_Result_61_fu_1262_p3);

assign overflow_9_fu_1319_p2 = (xor_ln895_9_fu_1313_p2 & p_Result_63_fu_1305_p3);

assign overflow_fu_932_p2 = (xor_ln895_fu_926_p2 & p_Result_45_fu_918_p3);

assign p_Result_21_fu_1375_p3 = ((xor_ln302_1_fu_981_p2[0:0] == 1'b1) ? select_ln346_1_fu_1357_p3 : tmp_1_fu_1365_p4);

assign p_Result_22_fu_1401_p3 = ((xor_ln302_2_fu_1024_p2[0:0] == 1'b1) ? select_ln346_2_fu_1383_p3 : tmp_2_fu_1391_p4);

assign p_Result_23_fu_1427_p3 = ((xor_ln302_3_fu_1067_p2[0:0] == 1'b1) ? select_ln346_3_fu_1409_p3 : tmp_3_fu_1417_p4);

assign p_Result_24_fu_1453_p3 = ((xor_ln302_4_fu_1110_p2[0:0] == 1'b1) ? select_ln346_4_fu_1435_p3 : tmp_4_fu_1443_p4);

assign p_Result_25_fu_1479_p3 = ((xor_ln302_5_fu_1153_p2[0:0] == 1'b1) ? select_ln346_5_fu_1461_p3 : tmp_5_fu_1469_p4);

assign p_Result_26_fu_1505_p3 = ((xor_ln302_6_fu_1196_p2[0:0] == 1'b1) ? select_ln346_6_fu_1487_p3 : tmp_6_fu_1495_p4);

assign p_Result_27_fu_1531_p3 = ((xor_ln302_7_fu_1239_p2[0:0] == 1'b1) ? select_ln346_7_fu_1513_p3 : tmp_7_fu_1521_p4);

assign p_Result_28_fu_1557_p3 = ((xor_ln302_8_fu_1282_p2[0:0] == 1'b1) ? select_ln346_8_fu_1539_p3 : tmp_8_fu_1547_p4);

assign p_Result_29_fu_1583_p3 = ((xor_ln302_9_fu_1325_p2[0:0] == 1'b1) ? select_ln346_9_fu_1565_p3 : tmp_9_fu_1573_p4);

assign p_Result_43_fu_2201_p3 = ((or_ln302_fu_2181_p2[0:0] == 1'b1) ? select_ln302_8_fu_2187_p3 : select_ln350_2_fu_2194_p3);

assign p_Result_44_fu_910_p3 = ret_V_fu_904_p2[32'd16];

assign p_Result_45_fu_918_p3 = ret_V_fu_904_p2[32'd15];

assign p_Result_46_fu_953_p3 = ret_V_1_fu_947_p2[32'd16];

assign p_Result_47_fu_961_p3 = ret_V_1_fu_947_p2[32'd15];

assign p_Result_48_fu_996_p3 = ret_V_2_fu_990_p2[32'd16];

assign p_Result_49_fu_1004_p3 = ret_V_2_fu_990_p2[32'd15];

assign p_Result_50_fu_1039_p3 = ret_V_3_fu_1033_p2[32'd16];

assign p_Result_51_fu_1047_p3 = ret_V_3_fu_1033_p2[32'd15];

assign p_Result_52_fu_1082_p3 = ret_V_4_fu_1076_p2[32'd16];

assign p_Result_53_fu_1090_p3 = ret_V_4_fu_1076_p2[32'd15];

assign p_Result_54_fu_1125_p3 = ret_V_5_fu_1119_p2[32'd16];

assign p_Result_55_fu_1133_p3 = ret_V_5_fu_1119_p2[32'd15];

assign p_Result_56_fu_1168_p3 = ret_V_6_fu_1162_p2[32'd16];

assign p_Result_57_fu_1176_p3 = ret_V_6_fu_1162_p2[32'd15];

assign p_Result_58_fu_1211_p3 = ret_V_7_fu_1205_p2[32'd16];

assign p_Result_59_fu_1219_p3 = ret_V_7_fu_1205_p2[32'd15];

assign p_Result_60_fu_1254_p3 = ret_V_8_fu_1248_p2[32'd16];

assign p_Result_61_fu_1262_p3 = ret_V_8_fu_1248_p2[32'd15];

assign p_Result_62_fu_1297_p3 = ret_V_9_fu_1291_p2[32'd16];

assign p_Result_63_fu_1305_p3 = ret_V_9_fu_1291_p2[32'd15];

assign p_Result_64_fu_1643_p3 = p_Val2_10_fu_1637_p2[32'd17];

assign p_Result_65_fu_1687_p3 = p_Val2_11_fu_1681_p2[32'd17];

assign p_Result_66_fu_1733_p3 = ret_V_10_fu_1727_p2[32'd18];

assign p_Result_67_fu_1747_p3 = p_Val2_13_fu_1741_p2[32'd17];

assign p_Result_68_fu_1787_p3 = p_Val2_14_fu_1781_p2[32'd17];

assign p_Result_69_fu_1831_p3 = p_Val2_15_fu_1825_p2[32'd17];

assign p_Result_70_fu_1877_p3 = ret_V_11_fu_1871_p2[32'd18];

assign p_Result_71_fu_1891_p3 = p_Val2_17_fu_1885_p2[32'd17];

assign p_Result_72_fu_2019_p3 = ret_V_12_fu_2013_p2[32'd18];

assign p_Result_73_fu_2033_p3 = p_Val2_19_fu_2027_p2[32'd17];

assign p_Result_74_fu_2085_p3 = p_Val2_20_fu_2075_p2[32'd17];

assign p_Result_s_fu_1349_p3 = ((xor_ln302_fu_938_p2[0:0] == 1'b1) ? select_ln346_fu_1331_p3 : tmp_fu_1339_p4);

assign p_Val2_10_fu_1637_p2 = (zext_ln43_1_fu_1634_p1 + zext_ln43_fu_1631_p1);

assign p_Val2_11_fu_1681_p2 = (zext_ln43_3_fu_1678_p1 + zext_ln43_2_fu_1675_p1);

assign p_Val2_13_fu_1741_p2 = ($signed(rhs_2_fu_1711_p3) + $signed(lhs_2_fu_1667_p3));

assign p_Val2_14_fu_1781_p2 = (zext_ln43_5_fu_1778_p1 + zext_ln43_4_fu_1775_p1);

assign p_Val2_15_fu_1825_p2 = (zext_ln43_7_fu_1822_p1 + zext_ln43_6_fu_1819_p1);

assign p_Val2_17_fu_1885_p2 = ($signed(rhs_5_fu_1855_p3) + $signed(lhs_5_fu_1811_p3));

assign p_Val2_19_fu_2027_p2 = ($signed(lhs_6_fu_1958_p3) + $signed(rhs_6_fu_1998_p3));

assign p_Val2_20_fu_2075_p2 = (exp_res_V_9_cast40_fu_1922_p1 + exp_res_V_8_cast39_fu_1919_p1);

assign p_Val2_22_fu_2127_p2 = ($signed(lhs_7_fu_2067_p3) + $signed(zext_ln813_fu_2101_p1));

assign ret_V_10_fu_1727_p2 = ($signed(sext_ln813_4_fu_1723_p1) + $signed(sext_ln813_3_fu_1719_p1));

assign ret_V_11_fu_1871_p2 = ($signed(sext_ln813_6_fu_1867_p1) + $signed(sext_ln813_5_fu_1863_p1));

assign ret_V_12_fu_2013_p2 = ($signed(sext_ln813_fu_2005_p1) + $signed(sext_ln813_1_fu_2009_p1));

assign ret_V_13_fu_2113_p2 = ($signed(sext_ln813_2_fu_2105_p1) + $signed(zext_ln813_1_fu_2109_p1));

assign ret_V_1_fu_947_p2 = ($signed(sext_ln1348_2_fu_944_p1) - $signed(sext_ln1348_1_fu_900_p1));

assign ret_V_2_fu_990_p2 = ($signed(sext_ln1348_3_fu_987_p1) - $signed(sext_ln1348_1_fu_900_p1));

assign ret_V_3_fu_1033_p2 = ($signed(sext_ln1348_4_fu_1030_p1) - $signed(sext_ln1348_1_fu_900_p1));

assign ret_V_4_fu_1076_p2 = ($signed(sext_ln1348_5_fu_1073_p1) - $signed(sext_ln1348_1_fu_900_p1));

assign ret_V_5_fu_1119_p2 = ($signed(sext_ln1348_6_fu_1116_p1) - $signed(sext_ln1348_1_fu_900_p1));

assign ret_V_6_fu_1162_p2 = ($signed(sext_ln1348_7_fu_1159_p1) - $signed(sext_ln1348_1_fu_900_p1));

assign ret_V_7_fu_1205_p2 = ($signed(sext_ln1348_8_fu_1202_p1) - $signed(sext_ln1348_1_fu_900_p1));

assign ret_V_8_fu_1248_p2 = ($signed(sext_ln1348_9_fu_1245_p1) - $signed(sext_ln1348_1_fu_900_p1));

assign ret_V_9_fu_1291_p2 = ($signed(sext_ln1348_10_fu_1288_p1) - $signed(sext_ln1348_1_fu_900_p1));

assign ret_V_fu_904_p2 = ($signed(sext_ln1348_fu_897_p1) - $signed(sext_ln1348_1_fu_900_p1));

assign rhs_2_fu_1711_p3 = ((p_Result_65_fu_1687_p3[0:0] == 1'b1) ? select_ln346_12_fu_1703_p3 : p_Val2_11_fu_1681_p2);

assign rhs_5_fu_1855_p3 = ((p_Result_69_fu_1831_p3[0:0] == 1'b1) ? select_ln346_14_fu_1847_p3 : p_Val2_15_fu_1825_p2);

assign rhs_6_fu_1998_p3 = ((or_ln302_2_fu_1985_p2[0:0] == 1'b1) ? select_ln302_5_fu_1991_p3 : select_ln350_1_reg_2676);

assign rhs_7_fu_2093_p3 = ((p_Result_74_fu_2085_p3[0:0] == 1'b1) ? 17'd131071 : add_ln856_fu_2081_p2);

assign select_ln302_5_fu_1991_p3 = ((xor_ln302_15_fu_1975_p2[0:0] == 1'b1) ? 18'd131071 : p_Val2_17_reg_2665);

assign select_ln302_8_fu_2187_p3 = ((xor_ln302_11_fu_2171_p2[0:0] == 1'b1) ? 10'd511 : tmp_s_reg_2695);

assign select_ln302_fu_1951_p3 = ((xor_ln302_13_fu_1935_p2[0:0] == 1'b1) ? 18'd131071 : p_Val2_13_reg_2643);

assign select_ln346_10_fu_2059_p3 = ((overflow_16_fu_2047_p2[0:0] == 1'b1) ? 18'd131071 : 18'd131072);

assign select_ln346_11_fu_1659_p3 = ((tmp_38_fu_1651_p3[0:0] == 1'b1) ? 18'd131071 : 18'd131072);

assign select_ln346_12_fu_1703_p3 = ((tmp_40_fu_1695_p3[0:0] == 1'b1) ? 18'd131071 : 18'd131072);

assign select_ln346_13_fu_1803_p3 = ((tmp_44_fu_1795_p3[0:0] == 1'b1) ? 18'd131071 : 18'd131072);

assign select_ln346_14_fu_1847_p3 = ((tmp_46_fu_1839_p3[0:0] == 1'b1) ? 18'd131071 : 18'd131072);

assign select_ln346_1_fu_1357_p3 = ((overflow_1_fu_975_p2[0:0] == 1'b1) ? 10'd511 : 10'd512);

assign select_ln346_2_fu_1383_p3 = ((overflow_2_fu_1018_p2[0:0] == 1'b1) ? 10'd511 : 10'd512);

assign select_ln346_3_fu_1409_p3 = ((overflow_3_fu_1061_p2[0:0] == 1'b1) ? 10'd511 : 10'd512);

assign select_ln346_4_fu_1435_p3 = ((overflow_4_fu_1104_p2[0:0] == 1'b1) ? 10'd511 : 10'd512);

assign select_ln346_5_fu_1461_p3 = ((overflow_5_fu_1147_p2[0:0] == 1'b1) ? 10'd511 : 10'd512);

assign select_ln346_6_fu_1487_p3 = ((overflow_6_fu_1190_p2[0:0] == 1'b1) ? 10'd511 : 10'd512);

assign select_ln346_7_fu_1513_p3 = ((overflow_7_fu_1233_p2[0:0] == 1'b1) ? 10'd511 : 10'd512);

assign select_ln346_8_fu_1539_p3 = ((overflow_8_fu_1276_p2[0:0] == 1'b1) ? 10'd511 : 10'd512);

assign select_ln346_9_fu_1565_p3 = ((overflow_9_fu_1319_p2[0:0] == 1'b1) ? 10'd511 : 10'd512);

assign select_ln346_fu_1331_p3 = ((overflow_fu_932_p2[0:0] == 1'b1) ? 10'd511 : 10'd512);

assign select_ln350_1_fu_1911_p3 = ((underflow_2_fu_1905_p2[0:0] == 1'b1) ? 18'd131072 : p_Val2_17_fu_1885_p2);

assign select_ln350_2_fu_2194_p3 = ((underflow_fu_2166_p2[0:0] == 1'b1) ? 10'd512 : tmp_s_reg_2695);

assign select_ln350_fu_1767_p3 = ((underflow_1_fu_1761_p2[0:0] == 1'b1) ? 18'd131072 : p_Val2_13_fu_1741_p2);

assign select_ln65_1_fu_776_p3 = ((xor_ln1651_1_fu_771_p2[0:0] == 1'b1) ? data_array_V_2_reg_2408 : data_array_V_3_reg_2414);

assign select_ln65_2_fu_794_p3 = ((xor_ln1651_2_fu_788_p2[0:0] == 1'b1) ? select_ln65_fu_765_p3 : select_ln65_1_fu_776_p3);

assign select_ln65_3_fu_807_p3 = ((xor_ln1651_3_fu_802_p2[0:0] == 1'b1) ? data_array_V_4_reg_2420 : data_array_V_5_reg_2426);

assign select_ln65_4_fu_818_p3 = ((xor_ln1651_4_fu_813_p2[0:0] == 1'b1) ? data_array_V_6_reg_2432 : data_array_V_7_reg_2438);

assign select_ln65_5_fu_836_p3 = ((xor_ln1651_5_fu_830_p2[0:0] == 1'b1) ? select_ln65_3_fu_807_p3 : select_ln65_4_fu_818_p3);

assign select_ln65_6_fu_856_p3 = ((xor_ln1651_6_fu_850_p2[0:0] == 1'b1) ? select_ln65_2_fu_794_p3 : select_ln65_5_fu_836_p3);

assign select_ln65_7_fu_873_p3 = ((xor_ln1651_7_fu_868_p2[0:0] == 1'b1) ? data_array_V_8_reg_2388 : data_array_V_9_reg_2395);

assign select_ln65_fu_765_p3 = ((xor_ln1651_fu_760_p2[0:0] == 1'b1) ? data_array_V_reg_2382 : data_array_V_1_reg_2402);

assign sext_ln1273_fu_2214_p1 = $signed(inv_exp_sum_V_reg_2706);

assign sext_ln1348_10_fu_1288_p1 = data_array_V_9_reg_2395;

assign sext_ln1348_1_fu_900_p1 = $signed(x_max_V_fu_890_p3);

assign sext_ln1348_2_fu_944_p1 = data_array_V_1_reg_2402;

assign sext_ln1348_3_fu_987_p1 = data_array_V_2_reg_2408;

assign sext_ln1348_4_fu_1030_p1 = data_array_V_3_reg_2414;

assign sext_ln1348_5_fu_1073_p1 = data_array_V_4_reg_2420;

assign sext_ln1348_6_fu_1116_p1 = data_array_V_5_reg_2426;

assign sext_ln1348_7_fu_1159_p1 = data_array_V_6_reg_2432;

assign sext_ln1348_8_fu_1202_p1 = data_array_V_7_reg_2438;

assign sext_ln1348_9_fu_1245_p1 = data_array_V_8_reg_2388;

assign sext_ln1348_fu_897_p1 = data_array_V_reg_2382;

assign sext_ln813_1_fu_2009_p1 = rhs_6_fu_1998_p3;

assign sext_ln813_2_fu_2105_p1 = lhs_7_fu_2067_p3;

assign sext_ln813_3_fu_1719_p1 = lhs_2_fu_1667_p3;

assign sext_ln813_4_fu_1723_p1 = rhs_2_fu_1711_p3;

assign sext_ln813_5_fu_1863_p1 = lhs_5_fu_1811_p3;

assign sext_ln813_6_fu_1867_p1 = rhs_5_fu_1855_p3;

assign sext_ln813_fu_2005_p1 = lhs_6_fu_1958_p3;

assign tmp_1_fu_1365_p4 = {{ret_V_1_fu_947_p2[15:6]}};

assign tmp_2_fu_1391_p4 = {{ret_V_2_fu_990_p2[15:6]}};

assign tmp_38_fu_1651_p3 = p_Val2_10_fu_1637_p2[32'd17];

assign tmp_3_fu_1417_p4 = {{ret_V_3_fu_1033_p2[15:6]}};

assign tmp_40_fu_1695_p3 = p_Val2_11_fu_1681_p2[32'd17];

assign tmp_44_fu_1795_p3 = p_Val2_14_fu_1781_p2[32'd17];

assign tmp_46_fu_1839_p3 = p_Val2_15_fu_1825_p2[32'd17];

assign tmp_4_fu_1443_p4 = {{ret_V_4_fu_1076_p2[15:6]}};

assign tmp_5_fu_1469_p4 = {{ret_V_5_fu_1119_p2[15:6]}};

assign tmp_6_fu_1495_p4 = {{ret_V_6_fu_1162_p2[15:6]}};

assign tmp_7_fu_1521_p4 = {{ret_V_7_fu_1205_p2[15:6]}};

assign tmp_8_fu_1547_p4 = {{ret_V_8_fu_1248_p2[15:6]}};

assign tmp_9_fu_1573_p4 = {{ret_V_9_fu_1291_p2[15:6]}};

assign tmp_fu_1339_p4 = {{ret_V_fu_904_p2[15:6]}};

assign underflow_1_fu_1761_p2 = (xor_ln896_1_fu_1755_p2 & p_Result_66_fu_1733_p3);

assign underflow_2_fu_1905_p2 = (xor_ln896_2_fu_1899_p2 & p_Result_70_fu_1877_p3);

assign underflow_fu_2166_p2 = (xor_ln896_fu_2161_p2 & p_Result_75_reg_2681);

assign x_max_V_fu_890_p3 = ((xor_ln1651_8_fu_884_p2[0:0] == 1'b1) ? select_ln65_6_reg_2464 : select_ln65_7_fu_873_p3);

assign xor_ln1651_1_fu_771_p2 = (icmp_ln1651_1_reg_2449 ^ 1'd1);

assign xor_ln1651_2_fu_788_p2 = (icmp_ln1651_2_fu_782_p2 ^ 1'd1);

assign xor_ln1651_3_fu_802_p2 = (icmp_ln1651_3_reg_2454 ^ 1'd1);

assign xor_ln1651_4_fu_813_p2 = (icmp_ln1651_4_reg_2459 ^ 1'd1);

assign xor_ln1651_5_fu_830_p2 = (icmp_ln1651_5_fu_824_p2 ^ 1'd1);

assign xor_ln1651_6_fu_850_p2 = (icmp_ln1651_6_fu_844_p2 ^ 1'd1);

assign xor_ln1651_7_fu_868_p2 = (icmp_ln1651_7_reg_2470 ^ 1'd1);

assign xor_ln1651_8_fu_884_p2 = (icmp_ln1651_8_fu_879_p2 ^ 1'd1);

assign xor_ln1651_fu_760_p2 = (icmp_ln1651_reg_2444 ^ 1'd1);

assign xor_ln302_10_fu_2053_p2 = (p_Result_73_fu_2033_p3 ^ p_Result_72_fu_2019_p3);

assign xor_ln302_11_fu_2171_p2 = (p_Result_76_reg_2688 ^ p_Result_75_reg_2681);

assign xor_ln302_12_fu_2175_p2 = (xor_ln302_11_fu_2171_p2 ^ 1'd1);

assign xor_ln302_13_fu_1935_p2 = (p_Result_67_reg_2648 ^ p_Result_66_reg_2637);

assign xor_ln302_14_fu_1939_p2 = (xor_ln302_13_fu_1935_p2 ^ 1'd1);

assign xor_ln302_15_fu_1975_p2 = (p_Result_71_reg_2670 ^ p_Result_70_reg_2659);

assign xor_ln302_16_fu_1979_p2 = (xor_ln302_15_fu_1975_p2 ^ 1'd1);

assign xor_ln302_1_fu_981_p2 = (p_Result_47_fu_961_p3 ^ p_Result_46_fu_953_p3);

assign xor_ln302_2_fu_1024_p2 = (p_Result_49_fu_1004_p3 ^ p_Result_48_fu_996_p3);

assign xor_ln302_3_fu_1067_p2 = (p_Result_51_fu_1047_p3 ^ p_Result_50_fu_1039_p3);

assign xor_ln302_4_fu_1110_p2 = (p_Result_53_fu_1090_p3 ^ p_Result_52_fu_1082_p3);

assign xor_ln302_5_fu_1153_p2 = (p_Result_55_fu_1133_p3 ^ p_Result_54_fu_1125_p3);

assign xor_ln302_6_fu_1196_p2 = (p_Result_57_fu_1176_p3 ^ p_Result_56_fu_1168_p3);

assign xor_ln302_7_fu_1239_p2 = (p_Result_59_fu_1219_p3 ^ p_Result_58_fu_1211_p3);

assign xor_ln302_8_fu_1282_p2 = (p_Result_61_fu_1262_p3 ^ p_Result_60_fu_1254_p3);

assign xor_ln302_9_fu_1325_p2 = (p_Result_63_fu_1305_p3 ^ p_Result_62_fu_1297_p3);

assign xor_ln302_fu_938_p2 = (p_Result_45_fu_918_p3 ^ p_Result_44_fu_910_p3);

assign xor_ln895_10_fu_2041_p2 = (p_Result_72_fu_2019_p3 ^ 1'd1);

assign xor_ln895_11_fu_2151_p2 = (p_Result_75_reg_2681 ^ 1'd1);

assign xor_ln895_12_fu_1925_p2 = (p_Result_66_reg_2637 ^ 1'd1);

assign xor_ln895_13_fu_1965_p2 = (p_Result_70_reg_2659 ^ 1'd1);

assign xor_ln895_1_fu_969_p2 = (p_Result_46_fu_953_p3 ^ 1'd1);

assign xor_ln895_2_fu_1012_p2 = (p_Result_48_fu_996_p3 ^ 1'd1);

assign xor_ln895_3_fu_1055_p2 = (p_Result_50_fu_1039_p3 ^ 1'd1);

assign xor_ln895_4_fu_1098_p2 = (p_Result_52_fu_1082_p3 ^ 1'd1);

assign xor_ln895_5_fu_1141_p2 = (p_Result_54_fu_1125_p3 ^ 1'd1);

assign xor_ln895_6_fu_1184_p2 = (p_Result_56_fu_1168_p3 ^ 1'd1);

assign xor_ln895_7_fu_1227_p2 = (p_Result_58_fu_1211_p3 ^ 1'd1);

assign xor_ln895_8_fu_1270_p2 = (p_Result_60_fu_1254_p3 ^ 1'd1);

assign xor_ln895_9_fu_1313_p2 = (p_Result_62_fu_1297_p3 ^ 1'd1);

assign xor_ln895_fu_926_p2 = (p_Result_44_fu_910_p3 ^ 1'd1);

assign xor_ln896_1_fu_1755_p2 = (p_Result_67_fu_1747_p3 ^ 1'd1);

assign xor_ln896_2_fu_1899_p2 = (p_Result_71_fu_1891_p3 ^ 1'd1);

assign xor_ln896_fu_2161_p2 = (p_Result_76_reg_2688 ^ 1'd1);

assign zext_ln225_1_fu_1595_p1 = p_Result_21_reg_2480;

assign zext_ln225_2_fu_1599_p1 = p_Result_22_reg_2485;

assign zext_ln225_3_fu_1603_p1 = p_Result_23_reg_2490;

assign zext_ln225_4_fu_1607_p1 = p_Result_24_reg_2495;

assign zext_ln225_5_fu_1611_p1 = p_Result_25_reg_2500;

assign zext_ln225_6_fu_1615_p1 = p_Result_26_reg_2505;

assign zext_ln225_7_fu_1619_p1 = p_Result_27_reg_2510;

assign zext_ln225_8_fu_1623_p1 = p_Result_28_reg_2515;

assign zext_ln225_9_fu_1627_p1 = p_Result_29_reg_2520;

assign zext_ln225_fu_1591_p1 = p_Result_s_reg_2475;

assign zext_ln235_fu_2209_p1 = p_Result_43_fu_2201_p3;

assign zext_ln43_1_fu_1634_p1 = exp_res_V_10_reg_2571;

assign zext_ln43_2_fu_1675_p1 = exp_res_V_11_reg_2577;

assign zext_ln43_3_fu_1678_p1 = exp_res_V_12_reg_2583;

assign zext_ln43_4_fu_1775_p1 = exp_res_V_13_reg_2589;

assign zext_ln43_5_fu_1778_p1 = exp_res_V_14_reg_2595;

assign zext_ln43_6_fu_1819_p1 = exp_res_V_15_reg_2601;

assign zext_ln43_7_fu_1822_p1 = exp_res_V_16_reg_2607;

assign zext_ln43_fu_1631_p1 = exp_res_V_reg_2565;

assign zext_ln813_1_fu_2109_p1 = rhs_7_fu_2093_p3;

assign zext_ln813_fu_2101_p1 = rhs_7_fu_2093_p3;

endmodule //kernel_wrapper_softmax_stable_array_array_ap_fixed_16_6_5_3_0_10u_softmax_config25_s
